{"ast":null,"code":"export const deserializerMiddleware = (options, deserializer) => next => async args => {\n  const {\n    response\n  } = await next(args);\n  try {\n    const parsed = await deserializer(response, options);\n    return {\n      response,\n      output: parsed\n    };\n  } catch (error) {\n    Object.defineProperty(error, \"$response\", {\n      value: response\n    });\n    if (!(\"$metadata\" in error)) {\n      const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n      error.message += \"\\n  \" + hint;\n      if (typeof error.$responseBodyText !== \"undefined\") {\n        if (error.$response) {\n          error.$response.body = error.$responseBodyText;\n        }\n      }\n    }\n    throw error;\n  }\n};","map":{"version":3,"names":["deserializerMiddleware","options","deserializer","next","args","response","parsed","output","error","Object","defineProperty","value","hint","message","$responseBodyText","$response","body"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js"],"sourcesContent":["export const deserializerMiddleware = (options, deserializer) => (next) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            error.message += \"\\n  \" + hint;\n            if (typeof error.$responseBodyText !== \"undefined\") {\n                if (error.$response) {\n                    error.$response.body = error.$responseBodyText;\n                }\n            }\n        }\n        throw error;\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,sBAAsB,GAAGA,CAACC,OAAO,EAAEC,YAAY,KAAMC,IAAI,IAAK,MAAOC,IAAI,IAAK;EACvF,MAAM;IAAEC;EAAS,CAAC,GAAG,MAAMF,IAAI,CAACC,IAAI,CAAC;EACrC,IAAI;IACA,MAAME,MAAM,GAAG,MAAMJ,YAAY,CAACG,QAAQ,EAAEJ,OAAO,CAAC;IACpD,OAAO;MACHI,QAAQ;MACRE,MAAM,EAAED;IACZ,CAAC;EACL,CAAC,CACD,OAAOE,KAAK,EAAE;IACVC,MAAM,CAACC,cAAc,CAACF,KAAK,EAAE,WAAW,EAAE;MACtCG,KAAK,EAAEN;IACX,CAAC,CAAC;IACF,IAAI,EAAE,WAAW,IAAIG,KAAK,CAAC,EAAE;MACzB,MAAMI,IAAI,GAAG,4GAA4G;MACzHJ,KAAK,CAACK,OAAO,IAAI,MAAM,GAAGD,IAAI;MAC9B,IAAI,OAAOJ,KAAK,CAACM,iBAAiB,KAAK,WAAW,EAAE;QAChD,IAAIN,KAAK,CAACO,SAAS,EAAE;UACjBP,KAAK,CAACO,SAAS,CAACC,IAAI,GAAGR,KAAK,CAACM,iBAAiB;QAClD;MACJ;IACJ;IACA,MAAMN,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}