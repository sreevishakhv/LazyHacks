{"ast":null,"code":"export const regionRedirectEndpointMiddleware = config => {\n  return (next, context) => async args => {\n    const originalRegion = await config.region();\n    const regionProviderRef = config.region;\n    let unlock = () => {};\n    if (context.__s3RegionRedirect) {\n      Object.defineProperty(config, \"region\", {\n        writable: false,\n        value: async () => {\n          return context.__s3RegionRedirect;\n        }\n      });\n      unlock = () => Object.defineProperty(config, \"region\", {\n        writable: true,\n        value: regionProviderRef\n      });\n    }\n    try {\n      const result = await next(args);\n      if (context.__s3RegionRedirect) {\n        unlock();\n        const region = await config.region();\n        if (originalRegion !== region) {\n          throw new Error(\"Region was not restored following S3 region redirect.\");\n        }\n      }\n      return result;\n    } catch (e) {\n      unlock();\n      throw e;\n    }\n  };\n};\nexport const regionRedirectEndpointMiddlewareOptions = {\n  tags: [\"REGION_REDIRECT\", \"S3\"],\n  name: \"regionRedirectEndpointMiddleware\",\n  override: true,\n  relation: \"before\",\n  toMiddleware: \"endpointV2Middleware\"\n};","map":{"version":3,"names":["regionRedirectEndpointMiddleware","config","next","context","args","originalRegion","region","regionProviderRef","unlock","__s3RegionRedirect","Object","defineProperty","writable","value","result","Error","e","regionRedirectEndpointMiddlewareOptions","tags","name","override","relation","toMiddleware"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-endpoint-middleware.js"],"sourcesContent":["export const regionRedirectEndpointMiddleware = (config) => {\n    return (next, context) => async (args) => {\n        const originalRegion = await config.region();\n        const regionProviderRef = config.region;\n        let unlock = () => { };\n        if (context.__s3RegionRedirect) {\n            Object.defineProperty(config, \"region\", {\n                writable: false,\n                value: async () => {\n                    return context.__s3RegionRedirect;\n                },\n            });\n            unlock = () => Object.defineProperty(config, \"region\", {\n                writable: true,\n                value: regionProviderRef,\n            });\n        }\n        try {\n            const result = await next(args);\n            if (context.__s3RegionRedirect) {\n                unlock();\n                const region = await config.region();\n                if (originalRegion !== region) {\n                    throw new Error(\"Region was not restored following S3 region redirect.\");\n                }\n            }\n            return result;\n        }\n        catch (e) {\n            unlock();\n            throw e;\n        }\n    };\n};\nexport const regionRedirectEndpointMiddlewareOptions = {\n    tags: [\"REGION_REDIRECT\", \"S3\"],\n    name: \"regionRedirectEndpointMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: \"endpointV2Middleware\",\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gCAAgC,GAAIC,MAAM,IAAK;EACxD,OAAO,CAACC,IAAI,EAAEC,OAAO,KAAK,MAAOC,IAAI,IAAK;IACtC,MAAMC,cAAc,GAAG,MAAMJ,MAAM,CAACK,MAAM,CAAC,CAAC;IAC5C,MAAMC,iBAAiB,GAAGN,MAAM,CAACK,MAAM;IACvC,IAAIE,MAAM,GAAGA,CAAA,KAAM,CAAE,CAAC;IACtB,IAAIL,OAAO,CAACM,kBAAkB,EAAE;MAC5BC,MAAM,CAACC,cAAc,CAACV,MAAM,EAAE,QAAQ,EAAE;QACpCW,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,MAAAA,CAAA,KAAY;UACf,OAAOV,OAAO,CAACM,kBAAkB;QACrC;MACJ,CAAC,CAAC;MACFD,MAAM,GAAGA,CAAA,KAAME,MAAM,CAACC,cAAc,CAACV,MAAM,EAAE,QAAQ,EAAE;QACnDW,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAEN;MACX,CAAC,CAAC;IACN;IACA,IAAI;MACA,MAAMO,MAAM,GAAG,MAAMZ,IAAI,CAACE,IAAI,CAAC;MAC/B,IAAID,OAAO,CAACM,kBAAkB,EAAE;QAC5BD,MAAM,CAAC,CAAC;QACR,MAAMF,MAAM,GAAG,MAAML,MAAM,CAACK,MAAM,CAAC,CAAC;QACpC,IAAID,cAAc,KAAKC,MAAM,EAAE;UAC3B,MAAM,IAAIS,KAAK,CAAC,uDAAuD,CAAC;QAC5E;MACJ;MACA,OAAOD,MAAM;IACjB,CAAC,CACD,OAAOE,CAAC,EAAE;MACNR,MAAM,CAAC,CAAC;MACR,MAAMQ,CAAC;IACX;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAMC,uCAAuC,GAAG;EACnDC,IAAI,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC;EAC/BC,IAAI,EAAE,kCAAkC;EACxCC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,QAAQ;EAClBC,YAAY,EAAE;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}