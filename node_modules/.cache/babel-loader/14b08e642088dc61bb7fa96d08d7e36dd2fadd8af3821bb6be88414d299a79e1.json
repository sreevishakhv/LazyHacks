{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/SmartAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './SmartAssistant.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SmartAssistant() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioURL = audioBlob ? URL.createObjectURL(audioBlob) : null;\n  const handleSubmit = () => {\n    if (audioBlob) {\n      setResponse(\"This is a sample response to your recorded question.\"); // Placeholder response for audio\n    } else if (question) {\n      setResponse(\"This is a sample response to your typed question.\"); // Placeholder response for text\n    }\n  };\n  const handleAudioSubmit = () => {\n    if (isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    } else {\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start();\n        setIsRecording(true);\n        const audioChunks = [];\n        mediaRecorder.ondataavailable = event => {\n          audioChunks.push(event.data);\n        };\n        mediaRecorder.onstop = () => {\n          const audioBlob = new Blob(audioChunks, {\n            type: 'audio/wav'\n          });\n          setAudioBlob(audioBlob);\n          setIsRecording(false);\n        };\n      }).catch(error => {\n        console.error(\"Microphone access denied or error: \", error);\n      });\n    }\n  };\n  const handleClearAudio = () => {\n    setAudioBlob(null);\n    setQuestion(\"\"); // Reset text input when returning to text input mode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"smart-assistant-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Assistant Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: \"This is a brief summary of the paper's content. (Placeholder text)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-box\",\n      children: [audioBlob ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-playback\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: audioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearAudio,\n          className: \"close-audio-button\",\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : !isRecording ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Type your question here or use the mic...\",\n        value: question,\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-indicator\",\n        children: \"Recording... \\uD83D\\uDD34\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-box-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAudioSubmit,\n          className: `mic-button ${isRecording ? 'recording' : ''}`,\n          children: isRecording ? \"Stop Recording\" : \"ðŸŽ¤ Use Mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"send-button\",\n          disabled: !question.trim() && !audioBlob,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Assistant Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(SmartAssistant, \"qlX50/VEUcDt8twOZ5W8syEp+TA=\");\n_c = SmartAssistant;\nexport default SmartAssistant;\nvar _c;\n$RefreshReg$(_c, \"SmartAssistant\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","SmartAssistant","_s","question","setQuestion","response","setResponse","isRecording","setIsRecording","audioBlob","setAudioBlob","mediaRecorderRef","audioURL","URL","createObjectURL","handleSubmit","handleAudioSubmit","current","stop","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","start","audioChunks","ondataavailable","event","push","data","onstop","Blob","type","catch","error","console","handleClearAudio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","onClick","placeholder","value","onChange","e","target","disabled","trim","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/SmartAssistant.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './SmartAssistant.css';\n\nfunction SmartAssistant() {\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioURL = audioBlob ? URL.createObjectURL(audioBlob) : null;\n\n  const handleSubmit = () => {\n    if (audioBlob) {\n      setResponse(\"This is a sample response to your recorded question.\"); // Placeholder response for audio\n    } else if (question) {\n      setResponse(\"This is a sample response to your typed question.\"); // Placeholder response for text\n    }\n  };\n\n  const handleAudioSubmit = () => {\n    if (isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    } else {\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start();\n        setIsRecording(true);\n\n        const audioChunks = [];\n        mediaRecorder.ondataavailable = (event) => {\n          audioChunks.push(event.data);\n        };\n\n        mediaRecorder.onstop = () => {\n          const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n          setAudioBlob(audioBlob);\n          setIsRecording(false);\n        };\n      }).catch((error) => {\n        console.error(\"Microphone access denied or error: \", error);\n      });\n    }\n  };\n\n  const handleClearAudio = () => {\n    setAudioBlob(null);\n    setQuestion(\"\"); // Reset text input when returning to text input mode\n  };\n\n  return (\n    <div className=\"smart-assistant-page\">\n      <h2>Smart Assistant Summary</h2>\n      <div className=\"summary\">\n        This is a brief summary of the paper's content. (Placeholder text)\n      </div>\n\n      <h3>Ask a Question</h3>\n      <div className=\"question-box\">\n        {audioBlob ? (\n          <div className=\"audio-playback\">\n            <audio controls src={audioURL} />\n            <button onClick={handleClearAudio} className=\"close-audio-button\">âœ–</button>\n          </div>\n        ) : !isRecording ? (\n          <textarea\n            placeholder=\"Type your question here or use the mic...\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n          />\n        ) : (\n          <div className=\"recording-indicator\">Recording... ðŸ”´</div>\n        )}\n        <div className=\"question-box-buttons\">\n          <button onClick={handleAudioSubmit} className={`mic-button ${isRecording ? 'recording' : ''}`}>\n            {isRecording ? \"Stop Recording\" : \"ðŸŽ¤ Use Mic\"}\n          </button>\n          <button \n            onClick={handleSubmit} \n            className=\"send-button\" \n            disabled={!question.trim() && !audioBlob}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n\n      <div className=\"response-box\">\n        <h4>Assistant Response</h4>\n        <p>{response}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default SmartAssistant;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}