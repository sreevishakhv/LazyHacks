{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/GoogleDriveNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport './GoogleDriveNotes.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GoogleDriveNotes() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/files');\n      setNotes(response.data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const uploadNote = async () => {\n    if (!file) {\n      alert('Please select a file to upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Note uploaded successfully.');\n      setFile(null);\n      fetchNotes(); // Refresh the notes list\n    } catch (error) {\n      console.error('Error uploading note:', error);\n      alert('Failed to upload note.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"google-drive-notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: uploadNote,\n        children: \"Upload Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"notesContainer\",\n        children: notes.length > 0 ? notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:5000/uploads/${note}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No notes to display.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleDriveNotes, \"s4gz+FPhxrsszqQ2x5M/cjgSmjc=\");\n_c = GoogleDriveNotes;\nexport default GoogleDriveNotes;\nvar _c;\n$RefreshReg$(_c, \"GoogleDriveNotes\");","map":{"version":3,"names":["React","useState","useEffect","Header","axios","jsxDEV","_jsxDEV","GoogleDriveNotes","_s","notes","setNotes","file","setFile","fetchNotes","response","get","data","error","console","handleFileChange","event","target","files","uploadNote","alert","formData","FormData","append","post","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","id","length","map","note","index","href","rel","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/GoogleDriveNotes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport './GoogleDriveNotes.css';\nimport axios from 'axios';\n\nfunction GoogleDriveNotes() {\n  const [notes, setNotes] = useState([]);\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/files');\n      setNotes(response.data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const uploadNote = async () => {\n    if (!file) {\n      alert('Please select a file to upload.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      await axios.post('http://localhost:5000/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      alert('Note uploaded successfully.');\n      setFile(null);\n      fetchNotes(); // Refresh the notes list\n    } catch (error) {\n      console.error('Error uploading note:', error);\n      alert('Failed to upload note.');\n    }\n  };\n\n  return (\n    <div className=\"google-drive-notes-page\">\n      <Header />\n      <div className=\"sidebar\">\n        <input type=\"file\" onChange={handleFileChange} className=\"file-input\" />\n        <button className=\"upload-button\" onClick={uploadNote}>\n          Upload Note\n        </button>\n      </div>\n      <div className=\"content\">\n        <h3>Notes</h3>\n        <div id=\"notesContainer\">\n          {notes.length > 0 ? (\n            notes.map((note, index) => (\n              <div key={index} className=\"note\">\n                <a href={`http://localhost:5000/uploads/${note}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {note}\n                </a>\n              </div>\n            ))\n          ) : (\n            <p>No notes to display.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GoogleDriveNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}