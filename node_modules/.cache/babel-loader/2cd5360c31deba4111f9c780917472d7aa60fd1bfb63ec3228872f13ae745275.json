{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/AddTask.js\",\n  _s = $RefreshSig$();\n// AddTask.js\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './AddTask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTask() {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [priority, setPriority] = useState('medium');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [tasks, setTasks] = useState([]);\n  const handleAddTask = e => {\n    e.preventDefault();\n    const selectedDate = new Date(deadline);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    if (selectedDate <= today) {\n      alert(\"Please select a future date for the task deadline.\");\n      return;\n    }\n    const newTask = {\n      taskName,\n      deadline: selectedDate,\n      priority,\n      difficulty\n    };\n    setTasks([...tasks, newTask]);\n    setTaskName('');\n    setDeadline('');\n    setPriority('medium');\n    setDifficulty('medium');\n    scheduleDailyReminders(newTask);\n  };\n  const scheduleDailyReminders = task => {\n    const intervalId = setInterval(() => {\n      const today = new Date();\n      const taskDeadline = new Date(task.deadline);\n      if (today >= taskDeadline) {\n        clearInterval(intervalId);\n      } else {\n        alert(`Reminder: Work on \"${task.taskName}\". Deadline is approaching!`);\n      }\n    }, 86400000); // 24 hours in milliseconds\n  };\n  const generateOptimalPlan = () => {\n    return tasks.map(task => {\n      const sessionMultiplier = task.difficulty === 'hard' ? 1.5 : task.difficulty === 'medium' ? 1 : 0.5;\n      const duration = Math.ceil(task.duration * sessionMultiplier);\n      const sessions = [];\n      for (let i = 0; i < duration; i++) {\n        const sessionDate = new Date(task.deadline);\n        sessionDate.setDate(sessionDate.getDate() - i);\n        sessions.push({\n          date: sessionDate,\n          taskName: task.taskName,\n          priority: task.priority\n        });\n      }\n      return sessions;\n    }).flat();\n  };\n\n  // const scheduledTasks = generateOptimalPlan();\n\n  const tileContent = ({\n    date\n  }) => {\n    const dayTasks = tasks.filter(task => task.deadline.toDateString() === date.toDateString());\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: dayTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `task-${task.priority}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-indicator\",\n          children: task.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  };\n  const todayDate = new Date().toISOString().split(\"T\")[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-assist-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Schedule Assist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"task-form-fullwidth\",\n      onSubmit: handleAddTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Task Name\",\n        value: taskName,\n        onChange: e => setTaskName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: deadline,\n        onChange: e => setDeadline(e.target.value),\n        required: true,\n        min: todayDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: priority,\n        onChange: e => setPriority(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: difficulty,\n        onChange: e => setDifficulty(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"easy\",\n          children: \"Easy Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hard\",\n          children: \"Hard Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        tileContent: tileContent,\n        className: \"calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTask, \"vx8eFZa+RNMOoCmHBnBwTYzL5yg=\");\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","AddTask","_s","taskName","setTaskName","deadline","setDeadline","priority","setPriority","difficulty","setDifficulty","tasks","setTasks","handleAddTask","e","preventDefault","selectedDate","Date","today","setHours","alert","newTask","scheduleDailyReminders","task","intervalId","setInterval","taskDeadline","clearInterval","generateOptimalPlan","map","sessionMultiplier","duration","Math","ceil","sessions","i","sessionDate","setDate","getDate","push","date","flat","tileContent","dayTasks","filter","toDateString","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","todayDate","toISOString","split","onSubmit","type","placeholder","value","onChange","target","required","min","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/AddTask.js"],"sourcesContent":["// AddTask.js\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './AddTask.css';\n\nfunction AddTask() {\n  const [taskName, setTaskName] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [priority, setPriority] = useState('medium');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [tasks, setTasks] = useState([]);\n\n  const handleAddTask = (e) => {\n    e.preventDefault();\n\n    const selectedDate = new Date(deadline);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    if (selectedDate <= today) {\n      alert(\"Please select a future date for the task deadline.\");\n      return;\n    }\n\n    const newTask = { taskName, deadline: selectedDate, priority, difficulty };\n    setTasks([...tasks, newTask]);\n\n    setTaskName('');\n    setDeadline('');\n    setPriority('medium');\n    setDifficulty('medium');\n\n    scheduleDailyReminders(newTask);\n  };\n\n  const scheduleDailyReminders = (task) => {\n    const intervalId = setInterval(() => {\n      const today = new Date();\n      const taskDeadline = new Date(task.deadline);\n\n      if (today >= taskDeadline) {\n        clearInterval(intervalId);\n      } else {\n        alert(`Reminder: Work on \"${task.taskName}\". Deadline is approaching!`);\n      }\n    }, 86400000); // 24 hours in milliseconds\n  };\n\n  const generateOptimalPlan = () => {\n    return tasks.map(task => {\n      const sessionMultiplier = task.difficulty === 'hard' ? 1.5 : task.difficulty === 'medium' ? 1 : 0.5;\n      const duration = Math.ceil(task.duration * sessionMultiplier);\n      const sessions = [];\n\n      for (let i = 0; i < duration; i++) {\n        const sessionDate = new Date(task.deadline);\n        sessionDate.setDate(sessionDate.getDate() - i);\n        sessions.push({ date: sessionDate, taskName: task.taskName, priority: task.priority });\n      }\n      return sessions;\n    }).flat();\n  };\n\n  // const scheduledTasks = generateOptimalPlan();\n\n  const tileContent = ({ date }) => {\n    const dayTasks = tasks.filter(\n      (task) => task.deadline.toDateString() === date.toDateString()\n    );\n\n    return (\n      <ul className=\"task-list\">\n        {dayTasks.map((task, index) => (\n          <li key={index} className={`task-${task.priority}`}>\n            <span className=\"task-indicator\">{task.taskName}</span>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const todayDate = new Date().toISOString().split(\"T\")[0];\n\n  return (\n    <div className=\"schedule-assist-page\">\n      <h2 className=\"page-title\">Schedule Assist</h2>\n      <form className=\"task-form-fullwidth\" onSubmit={handleAddTask}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Task Name\"\n          value={taskName}\n          onChange={(e) => setTaskName(e.target.value)}\n          required\n        />\n        <input\n          type=\"date\"\n          value={deadline}\n          onChange={(e) => setDeadline(e.target.value)}\n          required\n          min={todayDate}\n        />\n        <select value={priority} onChange={(e) => setPriority(e.target.value)}>\n          <option value=\"low\">Low Priority</option>\n          <option value=\"medium\">Medium Priority</option>\n          <option value=\"high\">High Priority</option>\n        </select>\n        <select value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\n          <option value=\"easy\">Easy Difficulty</option>\n          <option value=\"medium\">Medium Difficulty</option>\n          <option value=\"hard\">Hard Difficulty</option>\n        </select>\n        <button type=\"submit\">Add Task</button>\n      </form>\n\n      <div className=\"calendar-container\">\n        <Calendar\n          tileContent={tileContent}\n          className=\"calendar\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AddTask;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EAClD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMgB,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAACZ,QAAQ,CAAC;IACvC,MAAMa,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;IACxBC,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE1B,IAAIH,YAAY,IAAIE,KAAK,EAAE;MACzBE,KAAK,CAAC,oDAAoD,CAAC;MAC3D;IACF;IAEA,MAAMC,OAAO,GAAG;MAAElB,QAAQ;MAAEE,QAAQ,EAAEW,YAAY;MAAET,QAAQ;MAAEE;IAAW,CAAC;IAC1EG,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEU,OAAO,CAAC,CAAC;IAE7BjB,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,QAAQ,CAAC;IACrBE,aAAa,CAAC,QAAQ,CAAC;IAEvBY,sBAAsB,CAACD,OAAO,CAAC;EACjC,CAAC;EAED,MAAMC,sBAAsB,GAAIC,IAAI,IAAK;IACvC,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMP,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;MACxB,MAAMS,YAAY,GAAG,IAAIT,IAAI,CAACM,IAAI,CAAClB,QAAQ,CAAC;MAE5C,IAAIa,KAAK,IAAIQ,YAAY,EAAE;QACzBC,aAAa,CAACH,UAAU,CAAC;MAC3B,CAAC,MAAM;QACLJ,KAAK,CAAC,sBAAsBG,IAAI,CAACpB,QAAQ,6BAA6B,CAAC;MACzE;IACF,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMyB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,OAAOjB,KAAK,CAACkB,GAAG,CAACN,IAAI,IAAI;MACvB,MAAMO,iBAAiB,GAAGP,IAAI,CAACd,UAAU,KAAK,MAAM,GAAG,GAAG,GAAGc,IAAI,CAACd,UAAU,KAAK,QAAQ,GAAG,CAAC,GAAG,GAAG;MACnG,MAAMsB,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACV,IAAI,CAACQ,QAAQ,GAAGD,iBAAiB,CAAC;MAC7D,MAAMI,QAAQ,GAAG,EAAE;MAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,EAAEI,CAAC,EAAE,EAAE;QACjC,MAAMC,WAAW,GAAG,IAAInB,IAAI,CAACM,IAAI,CAAClB,QAAQ,CAAC;QAC3C+B,WAAW,CAACC,OAAO,CAACD,WAAW,CAACE,OAAO,CAAC,CAAC,GAAGH,CAAC,CAAC;QAC9CD,QAAQ,CAACK,IAAI,CAAC;UAAEC,IAAI,EAAEJ,WAAW;UAAEjC,QAAQ,EAAEoB,IAAI,CAACpB,QAAQ;UAAEI,QAAQ,EAAEgB,IAAI,CAAChB;QAAS,CAAC,CAAC;MACxF;MACA,OAAO2B,QAAQ;IACjB,CAAC,CAAC,CAACO,IAAI,CAAC,CAAC;EACX,CAAC;;EAED;;EAEA,MAAMC,WAAW,GAAGA,CAAC;IAAEF;EAAK,CAAC,KAAK;IAChC,MAAMG,QAAQ,GAAGhC,KAAK,CAACiC,MAAM,CAC1BrB,IAAI,IAAKA,IAAI,CAAClB,QAAQ,CAACwC,YAAY,CAAC,CAAC,KAAKL,IAAI,CAACK,YAAY,CAAC,CAC/D,CAAC;IAED,oBACE7C,OAAA;MAAI8C,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBJ,QAAQ,CAACd,GAAG,CAAC,CAACN,IAAI,EAAEyB,KAAK,kBACxBhD,OAAA;QAAgB8C,SAAS,EAAE,QAAQvB,IAAI,CAAChB,QAAQ,EAAG;QAAAwC,QAAA,eACjD/C,OAAA;UAAM8C,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAExB,IAAI,CAACpB;QAAQ;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADhDJ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAET,CAAC;EAED,MAAMC,SAAS,GAAG,IAAIpC,IAAI,CAAC,CAAC,CAACqC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAExD,oBACEvD,OAAA;IAAK8C,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC/C,OAAA;MAAI8C,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CpD,OAAA;MAAM8C,SAAS,EAAC,qBAAqB;MAACU,QAAQ,EAAE3C,aAAc;MAAAkC,QAAA,gBAC5D/C,OAAA;QACEyD,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAExD,QAAS;QAChByD,QAAQ,EAAG9C,CAAC,IAAKV,WAAW,CAACU,CAAC,CAAC+C,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFpD,OAAA;QACEyD,IAAI,EAAC,MAAM;QACXE,KAAK,EAAEtD,QAAS;QAChBuD,QAAQ,EAAG9C,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAAC+C,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;QACRC,GAAG,EAAEV;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFpD,OAAA;QAAQ2D,KAAK,EAAEpD,QAAS;QAACqD,QAAQ,EAAG9C,CAAC,IAAKN,WAAW,CAACM,CAAC,CAAC+C,MAAM,CAACF,KAAK,CAAE;QAAAZ,QAAA,gBACpE/C,OAAA;UAAQ2D,KAAK,EAAC,KAAK;UAAAZ,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzCpD,OAAA;UAAQ2D,KAAK,EAAC,QAAQ;UAAAZ,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/CpD,OAAA;UAAQ2D,KAAK,EAAC,MAAM;UAAAZ,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACTpD,OAAA;QAAQ2D,KAAK,EAAElD,UAAW;QAACmD,QAAQ,EAAG9C,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAAC+C,MAAM,CAACF,KAAK,CAAE;QAAAZ,QAAA,gBACxE/C,OAAA;UAAQ2D,KAAK,EAAC,MAAM;UAAAZ,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7CpD,OAAA;UAAQ2D,KAAK,EAAC,QAAQ;UAAAZ,QAAA,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjDpD,OAAA;UAAQ2D,KAAK,EAAC,MAAM;UAAAZ,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACTpD,OAAA;QAAQyD,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAEPpD,OAAA;MAAK8C,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjC/C,OAAA,CAACF,QAAQ;QACP4C,WAAW,EAAEA,WAAY;QACzBI,SAAS,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClD,EAAA,CArHQD,OAAO;AAAA+D,EAAA,GAAP/D,OAAO;AAuHhB,eAAeA,OAAO;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}