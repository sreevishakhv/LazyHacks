{"ast":null,"code":"export var SelectorType;\n(function (SelectorType) {\n  SelectorType[\"ENV\"] = \"env\";\n  SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const stringUnionSelector = (obj, key, union, type) => {\n  if (!(key in obj)) return undefined;\n  const value = obj[key].toUpperCase();\n  if (!Object.values(union).includes(value)) {\n    throw new TypeError(`Cannot load ${type} '${key}'. Expected one of ${Object.values(union)}, got '${obj[key]}'.`);\n  }\n  return value;\n};","map":{"version":3,"names":["SelectorType","stringUnionSelector","obj","key","union","type","undefined","value","toUpperCase","Object","values","includes","TypeError"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/stringUnionSelector.js"],"sourcesContent":["export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const stringUnionSelector = (obj, key, union, type) => {\n    if (!(key in obj))\n        return undefined;\n    const value = obj[key].toUpperCase();\n    if (!Object.values(union).includes(value)) {\n        throw new TypeError(`Cannot load ${type} '${key}'. Expected one of ${Object.values(union)}, got '${obj[key]}'.`);\n    }\n    return value;\n};\n"],"mappings":"AAAA,OAAO,IAAIA,YAAY;AACvB,CAAC,UAAUA,YAAY,EAAE;EACrBA,YAAY,CAAC,KAAK,CAAC,GAAG,KAAK;EAC3BA,YAAY,CAAC,QAAQ,CAAC,GAAG,qBAAqB;AAClD,CAAC,EAAEA,YAAY,KAAKA,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC,OAAO,MAAMC,mBAAmB,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAEC,IAAI,KAAK;EAC1D,IAAI,EAAEF,GAAG,IAAID,GAAG,CAAC,EACb,OAAOI,SAAS;EACpB,MAAMC,KAAK,GAAGL,GAAG,CAACC,GAAG,CAAC,CAACK,WAAW,CAAC,CAAC;EACpC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACN,KAAK,CAAC,CAACO,QAAQ,CAACJ,KAAK,CAAC,EAAE;IACvC,MAAM,IAAIK,SAAS,CAAC,eAAeP,IAAI,KAAKF,GAAG,sBAAsBM,MAAM,CAACC,MAAM,CAACN,KAAK,CAAC,UAAUF,GAAG,CAACC,GAAG,CAAC,IAAI,CAAC;EACpH;EACA,OAAOI,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}