{"ast":null,"code":"export const signS3Express = async (s3ExpressIdentity, signingOptions, request, sigV4MultiRegionSigner) => {\n  const signedRequest = await sigV4MultiRegionSigner.signWithCredentials(request, s3ExpressIdentity, {});\n  if (signedRequest.headers[\"X-Amz-Security-Token\"] || signedRequest.headers[\"x-amz-security-token\"]) {\n    throw new Error(\"X-Amz-Security-Token must not be set for s3-express requests.\");\n  }\n  return signedRequest;\n};","map":{"version":3,"names":["signS3Express","s3ExpressIdentity","signingOptions","request","sigV4MultiRegionSigner","signedRequest","signWithCredentials","headers","Error"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/functions/signS3Express.js"],"sourcesContent":["export const signS3Express = async (s3ExpressIdentity, signingOptions, request, sigV4MultiRegionSigner) => {\n    const signedRequest = await sigV4MultiRegionSigner.signWithCredentials(request, s3ExpressIdentity, {});\n    if (signedRequest.headers[\"X-Amz-Security-Token\"] || signedRequest.headers[\"x-amz-security-token\"]) {\n        throw new Error(\"X-Amz-Security-Token must not be set for s3-express requests.\");\n    }\n    return signedRequest;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,MAAAA,CAAOC,iBAAiB,EAAEC,cAAc,EAAEC,OAAO,EAAEC,sBAAsB,KAAK;EACvG,MAAMC,aAAa,GAAG,MAAMD,sBAAsB,CAACE,mBAAmB,CAACH,OAAO,EAAEF,iBAAiB,EAAE,CAAC,CAAC,CAAC;EACtG,IAAII,aAAa,CAACE,OAAO,CAAC,sBAAsB,CAAC,IAAIF,aAAa,CAACE,OAAO,CAAC,sBAAsB,CAAC,EAAE;IAChG,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;EACpF;EACA,OAAOH,aAAa;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}