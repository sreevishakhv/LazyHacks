{"ast":null,"code":"// import React, { useState, useRef, useEffect } from 'react';\n// import Header from '../components/Header';\n// import './UploadNotes.css';\n\n// function UploadNotes() {\n//   const [folders, setFolders] = useState([\n//     { name: 'Math', files: ['file1.pdf', 'file2.pdf'], subfolders: [] },\n//     { name: 'Science', files: ['file3.pdf'], subfolders: [] }\n//   ]);\n//   const [currentFolder, setCurrentFolder] = useState(null);\n//   const [showMenu, setShowMenu] = useState(null);\n//   const [showActionMenu, setShowActionMenu] = useState(false);\n//   const menuRef = useRef(null);\n//   const [newFolderName, setNewFolderName] = useState('');\n\n//   useEffect(() => {\n//     const handleClickOutside = (event) => {\n//       if (menuRef.current && !menuRef.current.contains(event.target)) {\n//         setShowMenu(null);\n//         setShowActionMenu(false);\n//       }\n//     };\n//     document.addEventListener(\"mousedown\", handleClickOutside);\n//     return () => {\n//       document.removeEventListener(\"mousedown\", handleClickOutside);\n//     };\n//   }, []);\n\n//   const handleAddFolder = () => {\n//     if (newFolderName.trim()) {\n//       setFolders([...folders, { name: newFolderName, files: [], subfolders: [] }]);\n//       setNewFolderName('');\n//     }\n//   };\n\n//   const handleSelectFolder = (folder) => {\n//     setCurrentFolder(folder);\n//   };\n\n//   const toggleActionMenu = () => {\n//     setShowActionMenu(!showActionMenu);\n//   };\n\n//   return (\n//     <div className=\"upload-notes-page\">\n//       <div className=\"sidebar\">\n//         <div className=\"sidebar-header\">\n//           <h3>Folders</h3>\n//           <span className=\"add-icon\" onClick={toggleActionMenu}>+</span>\n//           {showActionMenu && (\n//             <div className=\"action-menu\" ref={menuRef}>\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"New Folder Name\"\n//                 value={newFolderName}\n//                 onChange={(e) => setNewFolderName(e.target.value)}\n//               />\n//               <button onClick={handleAddFolder}>Add Folder</button>\n//             </div>\n//           )}\n//         </div>\n//         <ul className=\"folder-list\">\n//           {folders.map((folder, index) => (\n//             <li key={index} className=\"folder-header\" onClick={() => handleSelectFolder(folder)}>\n//               {folder.name}\n//               <span className=\"menu-icon\" onClick={() => setShowMenu(folder.name)}>⋮</span>\n//               {showMenu === folder.name && (\n//                 <div className=\"dropdown-menu\" ref={menuRef}>\n//                   <button>Edit</button>\n//                   <button>Delete</button>\n//                 </div>\n//               )}\n//               <ul className=\"file-list\">\n//                 {folder.files.map((file, idx) => (\n//                   <li key={idx} className=\"file-item\">\n//                     {file}\n//                     <span className=\"menu-icon\">⋮</span>\n//                   </li>\n//                 ))}\n//               </ul>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"content\">\n//       <Header />\n//         {currentFolder ? (\n//           <>\n//             <h3>{currentFolder.name} Notes</h3>\n//             <p>Select options in the sidebar to manage files and folders.</p>\n//           </>\n//         ) : (\n//           <p>Select a folder from the sidebar to view its contents.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default UploadNotes;\n\n// Google Drive API settings\n/* global gapi */\n\n// Google Drive API settings\nconst API_KEY = \"AIzaSyCjEU-U-ki8zWfYNXSV5ADFcJSLsPCEuhs\";\nconst CLIENT_ID = \"898750108776-iq2digsu2i6j9c7drvpd5bg700didsim.apps.googleusercontent.com\"; // Replace with your client ID\nconst SCOPES = \"https://www.googleapis.com/auth/drive.file\";\n898750108776 - iq2digsu2i6j9c7drvpd5bg700didsim.apps.googleusercontent.com;","map":{"version":3,"names":["API_KEY","CLIENT_ID","SCOPES","iq2digsu2i6j9c7drvpd5bg700didsim","apps","googleusercontent","com"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/UploadNotes.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\n// import Header from '../components/Header';\n// import './UploadNotes.css';\n\n// function UploadNotes() {\n//   const [folders, setFolders] = useState([\n//     { name: 'Math', files: ['file1.pdf', 'file2.pdf'], subfolders: [] },\n//     { name: 'Science', files: ['file3.pdf'], subfolders: [] }\n//   ]);\n//   const [currentFolder, setCurrentFolder] = useState(null);\n//   const [showMenu, setShowMenu] = useState(null);\n//   const [showActionMenu, setShowActionMenu] = useState(false);\n//   const menuRef = useRef(null);\n//   const [newFolderName, setNewFolderName] = useState('');\n\n//   useEffect(() => {\n//     const handleClickOutside = (event) => {\n//       if (menuRef.current && !menuRef.current.contains(event.target)) {\n//         setShowMenu(null);\n//         setShowActionMenu(false);\n//       }\n//     };\n//     document.addEventListener(\"mousedown\", handleClickOutside);\n//     return () => {\n//       document.removeEventListener(\"mousedown\", handleClickOutside);\n//     };\n//   }, []);\n\n//   const handleAddFolder = () => {\n//     if (newFolderName.trim()) {\n//       setFolders([...folders, { name: newFolderName, files: [], subfolders: [] }]);\n//       setNewFolderName('');\n//     }\n//   };\n\n//   const handleSelectFolder = (folder) => {\n//     setCurrentFolder(folder);\n//   };\n\n//   const toggleActionMenu = () => {\n//     setShowActionMenu(!showActionMenu);\n//   };\n\n//   return (\n//     <div className=\"upload-notes-page\">\n//       <div className=\"sidebar\">\n//         <div className=\"sidebar-header\">\n//           <h3>Folders</h3>\n//           <span className=\"add-icon\" onClick={toggleActionMenu}>+</span>\n//           {showActionMenu && (\n//             <div className=\"action-menu\" ref={menuRef}>\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"New Folder Name\"\n//                 value={newFolderName}\n//                 onChange={(e) => setNewFolderName(e.target.value)}\n//               />\n//               <button onClick={handleAddFolder}>Add Folder</button>\n//             </div>\n//           )}\n//         </div>\n//         <ul className=\"folder-list\">\n//           {folders.map((folder, index) => (\n//             <li key={index} className=\"folder-header\" onClick={() => handleSelectFolder(folder)}>\n//               {folder.name}\n//               <span className=\"menu-icon\" onClick={() => setShowMenu(folder.name)}>⋮</span>\n//               {showMenu === folder.name && (\n//                 <div className=\"dropdown-menu\" ref={menuRef}>\n//                   <button>Edit</button>\n//                   <button>Delete</button>\n//                 </div>\n//               )}\n//               <ul className=\"file-list\">\n//                 {folder.files.map((file, idx) => (\n//                   <li key={idx} className=\"file-item\">\n//                     {file}\n//                     <span className=\"menu-icon\">⋮</span>\n//                   </li>\n//                 ))}\n//               </ul>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"content\">\n//       <Header />\n//         {currentFolder ? (\n//           <>\n//             <h3>{currentFolder.name} Notes</h3>\n//             <p>Select options in the sidebar to manage files and folders.</p>\n//           </>\n//         ) : (\n//           <p>Select a folder from the sidebar to view its contents.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default UploadNotes;\n\n// Google Drive API settings\n/* global gapi */\n\n// Google Drive API settings\nconst API_KEY = \"AIzaSyCjEU-U-ki8zWfYNXSV5ADFcJSLsPCEuhs\";\nconst CLIENT_ID = \"898750108776-iq2digsu2i6j9c7drvpd5bg700didsim.apps.googleusercontent.com\"; // Replace with your client ID\nconst SCOPES = \"https://www.googleapis.com/auth/drive.file\";\n\n898750108776-iq2digsu2i6j9c7drvpd5bg700didsim.apps.googleusercontent.com"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,MAAMA,OAAO,GAAG,yCAAyC;AACzD,MAAMC,SAAS,GAAG,0EAA0E,CAAC,CAAC;AAC9F,MAAMC,MAAM,GAAG,4CAA4C;AAE3D,YAAY,GAACC,gCAAgC,CAACC,IAAI,CAACC,iBAAiB,CAACC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}