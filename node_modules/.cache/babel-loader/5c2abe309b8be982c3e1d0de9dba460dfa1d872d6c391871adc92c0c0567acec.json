{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/OptimalPlan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './OptimalPlan.css';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OptimalPlan() {\n  _s();\n  const [tasks] = useState([{\n    taskName: 'Study Chapter 1',\n    deadline: new Date(2024, 9, 27),\n    priority: 'high',\n    difficulty: 'hard',\n    duration: 3\n  }, {\n    taskName: 'Review Notes',\n    deadline: new Date(2024, 9, 28),\n    priority: 'medium',\n    difficulty: 'medium',\n    duration: 2\n  }, {\n    taskName: 'Complete Assignment',\n    deadline: new Date(2024, 9, 29),\n    priority: 'low',\n    difficulty: 'easy',\n    duration: 1\n  }]);\n  const generateOptimalPlan = () => {\n    const scheduledTasks = tasks.map(task => {\n      const sessionMultiplier = task.difficulty === 'hard' ? 1.5 : task.difficulty === 'medium' ? 1 : 0.5;\n      const sessions = [];\n      const duration = Math.ceil(task.duration * sessionMultiplier);\n      for (let i = 0; i < duration; i++) {\n        const sessionDate = new Date(task.deadline);\n        sessionDate.setDate(sessionDate.getDate() - i);\n        sessions.push({\n          date: sessionDate,\n          taskName: task.taskName,\n          priority: task.priority\n        });\n      }\n      return sessions;\n    }).flat();\n    return scheduledTasks;\n  };\n  const scheduledTasks = generateOptimalPlan();\n  const tileContent = ({\n    date\n  }) => {\n    const dayTasks = scheduledTasks.filter(task => task.date.toDateString() === date.toDateString());\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: dayTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `task-${task.priority}`,\n        children: task.taskName\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"optimal-plan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Optimal Study Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page-description\",\n      children: \"Your tasks are optimally scheduled based on priority, deadline, and difficulty level.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        tileContent: tileContent,\n        className: \"calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(OptimalPlan, \"SNvFm4bcHSUyEy+L/LrIR0LCt/g=\");\n_c = OptimalPlan;\nexport default OptimalPlan;\nvar _c;\n$RefreshReg$(_c, \"OptimalPlan\");","map":{"version":3,"names":["React","useState","Calendar","Header","jsxDEV","_jsxDEV","OptimalPlan","_s","tasks","taskName","deadline","Date","priority","difficulty","duration","generateOptimalPlan","scheduledTasks","map","task","sessionMultiplier","sessions","Math","ceil","i","sessionDate","setDate","getDate","push","date","flat","tileContent","dayTasks","filter","toDateString","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/OptimalPlan.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './OptimalPlan.css';\nimport Header from '../components/Header';\n\n\nfunction OptimalPlan() {\n  const [tasks] = useState([\n    { taskName: 'Study Chapter 1', deadline: new Date(2024, 9, 27), priority: 'high', difficulty: 'hard', duration: 3 },\n    { taskName: 'Review Notes', deadline: new Date(2024, 9, 28), priority: 'medium', difficulty: 'medium', duration: 2 },\n    { taskName: 'Complete Assignment', deadline: new Date(2024, 9, 29), priority: 'low', difficulty: 'easy', duration: 1 },\n  ]);\n\n  const generateOptimalPlan = () => {\n    const scheduledTasks = tasks.map(task => {\n      const sessionMultiplier = task.difficulty === 'hard' ? 1.5 : task.difficulty === 'medium' ? 1 : 0.5;\n      const sessions = [];\n      const duration = Math.ceil(task.duration * sessionMultiplier);\n\n      for (let i = 0; i < duration; i++) {\n        const sessionDate = new Date(task.deadline);\n        sessionDate.setDate(sessionDate.getDate() - i);\n        sessions.push({ date: sessionDate, taskName: task.taskName, priority: task.priority });\n      }\n      return sessions;\n    }).flat();\n\n    return scheduledTasks;\n  };\n\n  const scheduledTasks = generateOptimalPlan();\n\n  const tileContent = ({ date }) => {\n    const dayTasks = scheduledTasks.filter(\n      (task) => task.date.toDateString() === date.toDateString()\n    );\n\n    return (\n      <ul className=\"task-list\">\n        {dayTasks.map((task, index) => (\n          <li key={index} className={`task-${task.priority}`}>\n            {task.taskName}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"optimal-plan-page\">\n      <h2 className=\"page-title\">Optimal Study Plan</h2>\n      <p className=\"page-description\">Your tasks are optimally scheduled based on priority, deadline, and difficulty level.</p>\n\n      <div className=\"calendar-container\">\n        <Calendar\n          tileContent={tileContent}\n          className=\"calendar\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default OptimalPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}