{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/GoogleDriveNotes.js\",\n  _s = $RefreshSig$();\n/* global gapi */\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport './GoogleDriveNotes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"AIzaSyCjEU-U-ki8zWfYNXSV5ADFcJSLsPCEuhs\";\nconst CLIENT_ID = \"898750108776-iq2digsu2i6j9c7drvpd5bg700didsim.apps.googleusercontent.com\";\nconst SCOPES = \"https://www.googleapis.com/auth/drive.file\";\nfunction GoogleDriveNotes() {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    initClient();\n  }, []);\n  const loadGapiClient = () => {\n    return new Promise((resolve, reject) => {\n      gapi.load(\"client:auth2\", {\n        callback: resolve,\n        onerror: reject\n      });\n    });\n  };\n  const initClient = async () => {\n    try {\n      await loadGapiClient();\n      await gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        scope: SCOPES,\n        discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"]\n      });\n      await gapi.auth2.getAuthInstance().signIn();\n    } catch (error) {\n      console.error(\"Error initializing Google API client:\", error);\n    }\n  };\n  const selectBaseFolder = async () => {\n    const response = await gapi.client.drive.files.list({\n      q: \"mimeType='application/vnd.google-apps.folder' and trashed=false\",\n      fields: \"files(id, name)\"\n    });\n    setFolders(response.result.files);\n  };\n  const handleFolderSelect = event => {\n    setSelectedFolder(event.target.value);\n  };\n  const uploadNote = async () => {\n    if (!file || !selectedFolder) {\n      alert(\"Please select a folder and a file to upload.\");\n      return;\n    }\n    const metadata = {\n      name: file.name,\n      parents: [selectedFolder]\n    };\n    const form = new FormData();\n    form.append(\"metadata\", new Blob([JSON.stringify(metadata)], {\n      type: \"application/json\"\n    }));\n    form.append(\"file\", file);\n    try {\n      await fetch(\"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart\", {\n        method: \"POST\",\n        headers: new Headers({\n          Authorization: \"Bearer \" + gapi.auth.getToken().access_token\n        }),\n        body: form\n      });\n      alert(\"Note uploaded successfully.\");\n      viewNotes();\n    } catch (error) {\n      console.error(\"Error uploading note:\", error);\n      alert(\"Failed to upload note.\");\n    }\n  };\n  const viewNotes = async () => {\n    if (!selectedFolder) {\n      alert(\"Please select a folder to view notes.\");\n      return;\n    }\n    const response = await gapi.client.drive.files.list({\n      q: `'${selectedFolder}' in parents and trashed=false`,\n      fields: \"files(id, name, mimeType)\"\n    });\n    setNotes(response.result.files);\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"google-drive-notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"select-folder-button\",\n        onClick: selectBaseFolder,\n        children: \"Select Base Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"folder-select\",\n        onChange: handleFolderSelect,\n        value: selectedFolder,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.id,\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: uploadNote,\n        children: \"Upload Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-notes-button\",\n        onClick: viewNotes,\n        children: \"View Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"notesContainer\",\n        children: notes.length > 0 ? notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note\",\n          children: note.name\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No notes to display.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleDriveNotes, \"4BgRwoRzHnP1kLlm3Bz7BRUNSVg=\");\n_c = GoogleDriveNotes;\nexport default GoogleDriveNotes;\nvar _c;\n$RefreshReg$(_c, \"GoogleDriveNotes\");","map":{"version":3,"names":["React","useState","useEffect","Header","jsxDEV","_jsxDEV","API_KEY","CLIENT_ID","SCOPES","GoogleDriveNotes","_s","folders","setFolders","selectedFolder","setSelectedFolder","notes","setNotes","file","setFile","initClient","loadGapiClient","Promise","resolve","reject","gapi","load","callback","onerror","client","init","apiKey","clientId","scope","discoveryDocs","auth2","getAuthInstance","signIn","error","console","selectBaseFolder","response","drive","files","list","q","fields","result","handleFolderSelect","event","target","value","uploadNote","alert","metadata","name","parents","form","FormData","append","Blob","JSON","stringify","type","fetch","method","headers","Headers","Authorization","auth","getToken","access_token","body","viewNotes","handleFileChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","map","folder","id","length","note","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/GoogleDriveNotes.js"],"sourcesContent":["/* global gapi */\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport './GoogleDriveNotes.css';\n\nconst API_KEY = \"AIzaSyCjEU-U-ki8zWfYNXSV5ADFcJSLsPCEuhs\";\nconst CLIENT_ID = \"898750108776-iq2digsu2i6j9c7drvpd5bg700didsim.apps.googleusercontent.com\";\nconst SCOPES = \"https://www.googleapis.com/auth/drive.file\";\n\nfunction GoogleDriveNotes() {\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    initClient();\n  }, []);\n\n  const loadGapiClient = () => {\n    return new Promise((resolve, reject) => {\n      gapi.load(\"client:auth2\", {\n        callback: resolve,\n        onerror: reject,\n      });\n    });\n  };\n\n  const initClient = async () => {\n    try {\n      await loadGapiClient();\n      await gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        scope: SCOPES,\n        discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"],\n      });\n      await gapi.auth2.getAuthInstance().signIn();\n    } catch (error) {\n      console.error(\"Error initializing Google API client:\", error);\n    }\n  };\n\n  const selectBaseFolder = async () => {\n    const response = await gapi.client.drive.files.list({\n      q: \"mimeType='application/vnd.google-apps.folder' and trashed=false\",\n      fields: \"files(id, name)\",\n    });\n    setFolders(response.result.files);\n  };\n\n  const handleFolderSelect = (event) => {\n    setSelectedFolder(event.target.value);\n  };\n\n  const uploadNote = async () => {\n    if (!file || !selectedFolder) {\n      alert(\"Please select a folder and a file to upload.\");\n      return;\n    }\n\n    const metadata = {\n      name: file.name,\n      parents: [selectedFolder],\n    };\n\n    const form = new FormData();\n    form.append(\"metadata\", new Blob([JSON.stringify(metadata)], { type: \"application/json\" }));\n    form.append(\"file\", file);\n\n    try {\n      await fetch(\"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart\", {\n        method: \"POST\",\n        headers: new Headers({ Authorization: \"Bearer \" + gapi.auth.getToken().access_token }),\n        body: form,\n      });\n      alert(\"Note uploaded successfully.\");\n      viewNotes();\n    } catch (error) {\n      console.error(\"Error uploading note:\", error);\n      alert(\"Failed to upload note.\");\n    }\n  };\n\n  const viewNotes = async () => {\n    if (!selectedFolder) {\n      alert(\"Please select a folder to view notes.\");\n      return;\n    }\n\n    const response = await gapi.client.drive.files.list({\n      q: `'${selectedFolder}' in parents and trashed=false`,\n      fields: \"files(id, name, mimeType)\",\n    });\n    setNotes(response.result.files);\n  };\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  return (\n    <div className=\"google-drive-notes-page\">\n      <Header />\n      <div className=\"sidebar\">\n        <button className=\"select-folder-button\" onClick={selectBaseFolder}>\n          Select Base Folder\n        </button>\n        <select className=\"folder-select\" onChange={handleFolderSelect} value={selectedFolder}>\n          <option value=\"\">Choose Folder</option>\n          {folders.map((folder) => (\n            <option key={folder.id} value={folder.id}>\n              {folder.name}\n            </option>\n          ))}\n        </select>\n        <input type=\"file\" onChange={handleFileChange} className=\"file-input\" />\n        <button className=\"upload-button\" onClick={uploadNote}>\n          Upload Note\n        </button>\n        <button className=\"view-notes-button\" onClick={viewNotes}>\n          View Notes\n        </button>\n      </div>\n      <div className=\"content\">\n        <h3>Notes</h3>\n        <div id=\"notesContainer\">\n          {notes.length > 0 ? (\n            notes.map((note) => (\n              <div key={note.id} className=\"note\">\n                {note.name}\n              </div>\n            ))\n          ) : (\n            <p>No notes to display.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GoogleDriveNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}