{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/UploadNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './UploadNotes.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadNotes() {\n  _s();\n  var _folderData$find;\n  // Initial folder structure\n  const [folderData, setFolderData] = useState([{\n    name: \"Math\",\n    files: []\n  }, {\n    name: \"Science\",\n    files: []\n  }]);\n  const [selectedFolder, setSelectedFolder] = useState(\"Math\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [editingFolder, setEditingFolder] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n\n  // Handle file upload\n  const handleFileUpload = event => {\n    const uploadedFiles = Array.from(event.target.files).map(file => file.name);\n    setFolderData(prevData => prevData.map(folder => folder.name === selectedFolder ? {\n      ...folder,\n      files: [...folder.files, ...uploadedFiles]\n    } : folder));\n  };\n\n  // Add a new folder\n  const handleAddFolder = () => {\n    if (!newFolderName) return;\n    setFolderData([...folderData, {\n      name: newFolderName,\n      files: []\n    }]);\n    setNewFolderName(\"\");\n  };\n\n  // Rename a folder\n  const handleEditFolder = folderName => {\n    setEditingFolder(folderName);\n    setEditName(folderName);\n  };\n  const handleSaveEdit = () => {\n    setFolderData(prevData => prevData.map(folder => folder.name === editingFolder ? {\n      ...folder,\n      name: editName\n    } : folder));\n    setEditingFolder(null);\n  };\n\n  // Delete a folder\n  const handleDeleteFolder = folderName => {\n    var _folderData$;\n    setFolderData(prevData => prevData.filter(folder => folder.name !== folderName));\n    if (selectedFolder === folderName) setSelectedFolder(((_folderData$ = folderData[0]) === null || _folderData$ === void 0 ? void 0 : _folderData$.name) || \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Folders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"folder-list\",\n        children: folderData.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: folder.name === selectedFolder ? \"selected\" : \"\",\n          onClick: () => setSelectedFolder(folder.name),\n          children: editingFolder === folder.name ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editName,\n            onChange: e => setEditName(e.target.value),\n            onBlur: handleSaveEdit,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [folder.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditFolder(folder.name),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteFolder(folder.name),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, folder.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-folder\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          placeholder: \"New Folder Name\",\n          onChange: e => setNewFolderName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddFolder,\n          children: \"Add Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedFolder, \" Notes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileUpload,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_folderData$find = folderData.find(folder => folder.name === selectedFolder)) === null || _folderData$find === void 0 ? void 0 : _folderData$find.files.map((fileName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: fileName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadNotes, \"sWjmYbm2d3MMVM01s+ZXSSFUK7g=\");\n_c = UploadNotes;\nexport default UploadNotes;\nvar _c;\n$RefreshReg$(_c, \"UploadNotes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadNotes","_s","_folderData$find","folderData","setFolderData","name","files","selectedFolder","setSelectedFolder","newFolderName","setNewFolderName","editingFolder","setEditingFolder","editName","setEditName","handleFileUpload","event","uploadedFiles","Array","from","target","map","file","prevData","folder","handleAddFolder","handleEditFolder","folderName","handleSaveEdit","handleDeleteFolder","_folderData$","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","onBlur","autoFocus","placeholder","multiple","find","index","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/UploadNotes.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './UploadNotes.css';\n\nfunction UploadNotes() {\n  // Initial folder structure\n  const [folderData, setFolderData] = useState([\n    { name: \"Math\", files: [] },\n    { name: \"Science\", files: [] },\n  ]);\n\n  const [selectedFolder, setSelectedFolder] = useState(\"Math\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [editingFolder, setEditingFolder] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n\n  // Handle file upload\n  const handleFileUpload = (event) => {\n    const uploadedFiles = Array.from(event.target.files).map((file) => file.name);\n\n    setFolderData((prevData) =>\n      prevData.map((folder) =>\n        folder.name === selectedFolder\n          ? { ...folder, files: [...folder.files, ...uploadedFiles] }\n          : folder\n      )\n    );\n  };\n\n  // Add a new folder\n  const handleAddFolder = () => {\n    if (!newFolderName) return;\n    setFolderData([...folderData, { name: newFolderName, files: [] }]);\n    setNewFolderName(\"\");\n  };\n\n  // Rename a folder\n  const handleEditFolder = (folderName) => {\n    setEditingFolder(folderName);\n    setEditName(folderName);\n  };\n\n  const handleSaveEdit = () => {\n    setFolderData((prevData) =>\n      prevData.map((folder) =>\n        folder.name === editingFolder ? { ...folder, name: editName } : folder\n      )\n    );\n    setEditingFolder(null);\n  };\n\n  // Delete a folder\n  const handleDeleteFolder = (folderName) => {\n    setFolderData((prevData) => prevData.filter((folder) => folder.name !== folderName));\n    if (selectedFolder === folderName) setSelectedFolder(folderData[0]?.name || \"\");\n  };\n\n  return (\n    <div className=\"upload-notes-page\">\n      <div className=\"sidebar\">\n        <h3>Folders</h3>\n        <ul className=\"folder-list\">\n          {folderData.map((folder) => (\n            <li\n              key={folder.name}\n              className={folder.name === selectedFolder ? \"selected\" : \"\"}\n              onClick={() => setSelectedFolder(folder.name)}\n            >\n              {editingFolder === folder.name ? (\n                <input\n                  type=\"text\"\n                  value={editName}\n                  onChange={(e) => setEditName(e.target.value)}\n                  onBlur={handleSaveEdit}\n                  autoFocus\n                />\n              ) : (\n                <>\n                  {folder.name}\n                  <button onClick={() => handleEditFolder(folder.name)}>Edit</button>\n                  <button onClick={() => handleDeleteFolder(folder.name)}>Delete</button>\n                </>\n              )}\n            </li>\n          ))}\n        </ul>\n        <div className=\"add-folder\">\n          <input\n            type=\"text\"\n            value={newFolderName}\n            placeholder=\"New Folder Name\"\n            onChange={(e) => setNewFolderName(e.target.value)}\n          />\n          <button onClick={handleAddFolder}>Add Folder</button>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <h3>{selectedFolder} Notes</h3>\n        <input type=\"file\" multiple onChange={handleFileUpload} className=\"file-input\" />\n        <div className=\"file-list\">\n          <h4>Files:</h4>\n          <ul>\n            {folderData\n              .find((folder) => folder.name === selectedFolder)\n              ?.files.map((fileName, index) => (\n                <li key={index}>{fileName}</li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}