{"ast":null,"code":"import { HttpResponse } from \"@smithy/protocol-http\";\nimport { parseRfc7231DateTime } from \"@smithy/smithy-client\";\nexport const s3ExpiresMiddleware = config => {\n  return (next, context) => async args => {\n    const result = await next(args);\n    const {\n      response\n    } = result;\n    if (HttpResponse.isInstance(response)) {\n      if (response.headers.expires) {\n        response.headers.expiresstring = response.headers.expires;\n        try {\n          parseRfc7231DateTime(response.headers.expires);\n        } catch (e) {\n          context.logger?.warn(`AWS SDK Warning for ${context.clientName}::${context.commandName} response parsing (${response.headers.expires}): ${e}`);\n          delete response.headers.expires;\n        }\n      }\n    }\n    return result;\n  };\n};\nexport const s3ExpiresMiddlewareOptions = {\n  tags: [\"S3\"],\n  name: \"s3ExpiresMiddleware\",\n  override: true,\n  relation: \"after\",\n  toMiddleware: \"deserializerMiddleware\"\n};\nexport const getS3ExpiresMiddlewarePlugin = clientConfig => ({\n  applyToStack: clientStack => {\n    clientStack.addRelativeTo(s3ExpiresMiddleware(clientConfig), s3ExpiresMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["HttpResponse","parseRfc7231DateTime","s3ExpiresMiddleware","config","next","context","args","result","response","isInstance","headers","expires","expiresstring","e","logger","warn","clientName","commandName","s3ExpiresMiddlewareOptions","tags","name","override","relation","toMiddleware","getS3ExpiresMiddlewarePlugin","clientConfig","applyToStack","clientStack","addRelativeTo"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-expires-middleware.js"],"sourcesContent":["import { HttpResponse } from \"@smithy/protocol-http\";\nimport { parseRfc7231DateTime } from \"@smithy/smithy-client\";\nexport const s3ExpiresMiddleware = (config) => {\n    return (next, context) => async (args) => {\n        const result = await next(args);\n        const { response } = result;\n        if (HttpResponse.isInstance(response)) {\n            if (response.headers.expires) {\n                response.headers.expiresstring = response.headers.expires;\n                try {\n                    parseRfc7231DateTime(response.headers.expires);\n                }\n                catch (e) {\n                    context.logger?.warn(`AWS SDK Warning for ${context.clientName}::${context.commandName} response parsing (${response.headers.expires}): ${e}`);\n                    delete response.headers.expires;\n                }\n            }\n        }\n        return result;\n    };\n};\nexport const s3ExpiresMiddlewareOptions = {\n    tags: [\"S3\"],\n    name: \"s3ExpiresMiddleware\",\n    override: true,\n    relation: \"after\",\n    toMiddleware: \"deserializerMiddleware\",\n};\nexport const getS3ExpiresMiddlewarePlugin = (clientConfig) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(s3ExpiresMiddleware(clientConfig), s3ExpiresMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,OAAO,MAAMC,mBAAmB,GAAIC,MAAM,IAAK;EAC3C,OAAO,CAACC,IAAI,EAAEC,OAAO,KAAK,MAAOC,IAAI,IAAK;IACtC,MAAMC,MAAM,GAAG,MAAMH,IAAI,CAACE,IAAI,CAAC;IAC/B,MAAM;MAAEE;IAAS,CAAC,GAAGD,MAAM;IAC3B,IAAIP,YAAY,CAACS,UAAU,CAACD,QAAQ,CAAC,EAAE;MACnC,IAAIA,QAAQ,CAACE,OAAO,CAACC,OAAO,EAAE;QAC1BH,QAAQ,CAACE,OAAO,CAACE,aAAa,GAAGJ,QAAQ,CAACE,OAAO,CAACC,OAAO;QACzD,IAAI;UACAV,oBAAoB,CAACO,QAAQ,CAACE,OAAO,CAACC,OAAO,CAAC;QAClD,CAAC,CACD,OAAOE,CAAC,EAAE;UACNR,OAAO,CAACS,MAAM,EAAEC,IAAI,CAAC,uBAAuBV,OAAO,CAACW,UAAU,KAAKX,OAAO,CAACY,WAAW,sBAAsBT,QAAQ,CAACE,OAAO,CAACC,OAAO,MAAME,CAAC,EAAE,CAAC;UAC9I,OAAOL,QAAQ,CAACE,OAAO,CAACC,OAAO;QACnC;MACJ;IACJ;IACA,OAAOJ,MAAM;EACjB,CAAC;AACL,CAAC;AACD,OAAO,MAAMW,0BAA0B,GAAG;EACtCC,IAAI,EAAE,CAAC,IAAI,CAAC;EACZC,IAAI,EAAE,qBAAqB;EAC3BC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,OAAO;EACjBC,YAAY,EAAE;AAClB,CAAC;AACD,OAAO,MAAMC,4BAA4B,GAAIC,YAAY,KAAM;EAC3DC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,aAAa,CAAC1B,mBAAmB,CAACuB,YAAY,CAAC,EAAEP,0BAA0B,CAAC;EAC5F;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}