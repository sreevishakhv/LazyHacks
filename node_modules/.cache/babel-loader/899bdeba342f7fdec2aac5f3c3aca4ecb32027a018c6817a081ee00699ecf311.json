{"ast":null,"code":"export function locationConstraintMiddleware(options) {\n  return next => async args => {\n    const {\n      CreateBucketConfiguration\n    } = args.input;\n    const region = await options.region();\n    if (!CreateBucketConfiguration?.LocationConstraint && !CreateBucketConfiguration?.Location) {\n      args = {\n        ...args,\n        input: {\n          ...args.input,\n          CreateBucketConfiguration: region === \"us-east-1\" ? undefined : {\n            LocationConstraint: region\n          }\n        }\n      };\n    }\n    return next(args);\n  };\n}\nexport const locationConstraintMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"LOCATION_CONSTRAINT\", \"CREATE_BUCKET_CONFIGURATION\"],\n  name: \"locationConstraintMiddleware\",\n  override: true\n};\nexport const getLocationConstraintPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.add(locationConstraintMiddleware(config), locationConstraintMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["locationConstraintMiddleware","options","next","args","CreateBucketConfiguration","input","region","LocationConstraint","Location","undefined","locationConstraintMiddlewareOptions","step","tags","name","override","getLocationConstraintPlugin","config","applyToStack","clientStack","add"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-location-constraint/dist-es/index.js"],"sourcesContent":["export function locationConstraintMiddleware(options) {\n    return (next) => async (args) => {\n        const { CreateBucketConfiguration } = args.input;\n        const region = await options.region();\n        if (!CreateBucketConfiguration?.LocationConstraint && !CreateBucketConfiguration?.Location) {\n            args = {\n                ...args,\n                input: {\n                    ...args.input,\n                    CreateBucketConfiguration: region === \"us-east-1\" ? undefined : { LocationConstraint: region },\n                },\n            };\n        }\n        return next(args);\n    };\n}\nexport const locationConstraintMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"LOCATION_CONSTRAINT\", \"CREATE_BUCKET_CONFIGURATION\"],\n    name: \"locationConstraintMiddleware\",\n    override: true,\n};\nexport const getLocationConstraintPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(locationConstraintMiddleware(config), locationConstraintMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,OAAO,SAASA,4BAA4BA,CAACC,OAAO,EAAE;EAClD,OAAQC,IAAI,IAAK,MAAOC,IAAI,IAAK;IAC7B,MAAM;MAAEC;IAA0B,CAAC,GAAGD,IAAI,CAACE,KAAK;IAChD,MAAMC,MAAM,GAAG,MAAML,OAAO,CAACK,MAAM,CAAC,CAAC;IACrC,IAAI,CAACF,yBAAyB,EAAEG,kBAAkB,IAAI,CAACH,yBAAyB,EAAEI,QAAQ,EAAE;MACxFL,IAAI,GAAG;QACH,GAAGA,IAAI;QACPE,KAAK,EAAE;UACH,GAAGF,IAAI,CAACE,KAAK;UACbD,yBAAyB,EAAEE,MAAM,KAAK,WAAW,GAAGG,SAAS,GAAG;YAAEF,kBAAkB,EAAED;UAAO;QACjG;MACJ,CAAC;IACL;IACA,OAAOJ,IAAI,CAACC,IAAI,CAAC;EACrB,CAAC;AACL;AACA,OAAO,MAAMO,mCAAmC,GAAG;EAC/CC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,CAAC,qBAAqB,EAAE,6BAA6B,CAAC;EAC5DC,IAAI,EAAE,8BAA8B;EACpCC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,2BAA2B,GAAIC,MAAM,KAAM;EACpDC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAACnB,4BAA4B,CAACgB,MAAM,CAAC,EAAEN,mCAAmC,CAAC;EAC9F;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}