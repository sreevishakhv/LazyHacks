{"ast":null,"code":"// Adjust generateOptimalPlan function to consider difficulty\nconst generateOptimalPlan = () => {\n  const scheduledTasks = tasks.map(task => {\n    const sessionMultiplier = task.difficulty === 'hard' ? 1.5 : task.difficulty === 'medium' ? 1 : 0.5;\n    const sessions = [];\n    const duration = Math.ceil(task.duration * sessionMultiplier);\n    for (let i = 0; i < duration; i++) {\n      const sessionDate = new Date(task.deadline);\n      sessionDate.setDate(sessionDate.getDate() - i);\n      sessions.push({\n        date: sessionDate,\n        taskName: task.taskName,\n        priority: task.priority\n      });\n    }\n    return sessions;\n  }).flat();\n  return scheduledTasks;\n};","map":{"version":3,"names":["generateOptimalPlan","scheduledTasks","tasks","map","task","sessionMultiplier","difficulty","sessions","duration","Math","ceil","i","sessionDate","Date","deadline","setDate","getDate","push","date","taskName","priority","flat"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/OptimalPlan.js"],"sourcesContent":["// Adjust generateOptimalPlan function to consider difficulty\nconst generateOptimalPlan = () => {\n    const scheduledTasks = tasks.map(task => {\n      const sessionMultiplier = task.difficulty === 'hard' ? 1.5 : task.difficulty === 'medium' ? 1 : 0.5;\n      const sessions = [];\n      const duration = Math.ceil(task.duration * sessionMultiplier);\n  \n      for (let i = 0; i < duration; i++) {\n        const sessionDate = new Date(task.deadline);\n        sessionDate.setDate(sessionDate.getDate() - i);\n        sessions.push({ date: sessionDate, taskName: task.taskName, priority: task.priority });\n      }\n      return sessions;\n    }).flat();\n  \n    return scheduledTasks;\n  };\n  "],"mappings":"AAAA;AACA,MAAMA,mBAAmB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,cAAc,GAAGC,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;IACvC,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,UAAU,KAAK,MAAM,GAAG,GAAG,GAAGF,IAAI,CAACE,UAAU,KAAK,QAAQ,GAAG,CAAC,GAAG,GAAG;IACnG,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACN,IAAI,CAACI,QAAQ,GAAGH,iBAAiB,CAAC;IAE7D,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,EAAEG,CAAC,EAAE,EAAE;MACjC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACT,IAAI,CAACU,QAAQ,CAAC;MAC3CF,WAAW,CAACG,OAAO,CAACH,WAAW,CAACI,OAAO,CAAC,CAAC,GAAGL,CAAC,CAAC;MAC9CJ,QAAQ,CAACU,IAAI,CAAC;QAAEC,IAAI,EAAEN,WAAW;QAAEO,QAAQ,EAAEf,IAAI,CAACe,QAAQ;QAAEC,QAAQ,EAAEhB,IAAI,CAACgB;MAAS,CAAC,CAAC;IACxF;IACA,OAAOb,QAAQ;EACjB,CAAC,CAAC,CAACc,IAAI,CAAC,CAAC;EAET,OAAOpB,cAAc;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}