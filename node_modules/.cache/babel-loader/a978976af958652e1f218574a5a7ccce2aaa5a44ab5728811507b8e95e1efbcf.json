{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/OptimalPlan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './OptimalPlan.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OptimalPlan() {\n  _s();\n  const [tasks] = useState([{\n    taskName: 'Study Chapter 1',\n    deadline: new Date(2024, 9, 27),\n    priority: 'high',\n    duration: 3\n  }, {\n    taskName: 'Review Notes',\n    deadline: new Date(2024, 9, 28),\n    priority: 'medium',\n    duration: 2\n  }, {\n    taskName: 'Complete Assignment',\n    deadline: new Date(2024, 9, 29),\n    priority: 'low',\n    duration: 1\n  }]);\n\n  // Function to generate an optimized plan based on tasks\n  const generateOptimalPlan = () => {\n    const scheduledTasks = tasks.map(task => {\n      const sessions = [];\n      for (let i = 0; i < task.duration; i++) {\n        const sessionDate = new Date(task.deadline);\n        sessionDate.setDate(sessionDate.getDate() - i);\n        sessions.push({\n          date: sessionDate,\n          taskName: task.taskName,\n          priority: task.priority\n        });\n      }\n      return sessions;\n    }).flat();\n    return scheduledTasks;\n  };\n  const scheduledTasks = generateOptimalPlan();\n  const tileContent = ({\n    date\n  }) => {\n    const dayTasks = scheduledTasks.filter(task => task.date.toDateString() === date.toDateString());\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: dayTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `task-${task.priority}`,\n        children: task.taskName\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"optimal-plan-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Optimal Study Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page-description\",\n      children: \"Your tasks are optimally scheduled based on priority and deadlines.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"radial-progress text-primary\",\n      style: \"--value:70;\",\n      role: \"progressbar\",\n      children: \"70%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        tileContent: tileContent,\n        className: \"calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(OptimalPlan, \"TRWMM+XitNa6NkR3lVj+MGtYsms=\");\n_c = OptimalPlan;\nexport default OptimalPlan;\nvar _c;\n$RefreshReg$(_c, \"OptimalPlan\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","OptimalPlan","_s","tasks","taskName","deadline","Date","priority","duration","generateOptimalPlan","scheduledTasks","map","task","sessions","i","sessionDate","setDate","getDate","push","date","flat","tileContent","dayTasks","filter","toDateString","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","class","style","role","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/OptimalPlan.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './OptimalPlan.css';\n\nfunction OptimalPlan() {\n  const [tasks] = useState([\n    { taskName: 'Study Chapter 1', deadline: new Date(2024, 9, 27), priority: 'high', duration: 3 },\n    { taskName: 'Review Notes', deadline: new Date(2024, 9, 28), priority: 'medium', duration: 2 },\n    { taskName: 'Complete Assignment', deadline: new Date(2024, 9, 29), priority: 'low', duration: 1 },\n  ]);\n\n  // Function to generate an optimized plan based on tasks\n  const generateOptimalPlan = () => {\n    const scheduledTasks = tasks.map(task => {\n      const sessions = [];\n      for (let i = 0; i < task.duration; i++) {\n        const sessionDate = new Date(task.deadline);\n        sessionDate.setDate(sessionDate.getDate() - i);\n        sessions.push({ date: sessionDate, taskName: task.taskName, priority: task.priority });\n      }\n      return sessions;\n    }).flat();\n\n    return scheduledTasks;\n  };\n\n  const scheduledTasks = generateOptimalPlan();\n\n  const tileContent = ({ date }) => {\n    const dayTasks = scheduledTasks.filter(\n      (task) => task.date.toDateString() === date.toDateString()\n    );\n\n    return (\n      <ul className=\"task-list\">\n        {dayTasks.map((task, index) => (\n          <li key={index} className={`task-${task.priority}`}>\n            {task.taskName}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n   \n    <div className=\"optimal-plan-page\">\n      <h2 className=\"page-title\">Optimal Study Plan</h2>\n      <p className=\"page-description\">Your tasks are optimally scheduled based on priority and deadlines.</p>\n      <div class=\"radial-progress text-primary\" style=\"--value:70;\" role=\"progressbar\">70%</div>\n      <div className=\"calendar-container\">\n        <Calendar\n          tileContent={tileContent}\n          className=\"calendar\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default OptimalPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}