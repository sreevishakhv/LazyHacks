{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/GoogleDriveNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './GoogleDriveNotes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GoogleDriveNotes() {\n  _s();\n  const [fileTree, setFileTree] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [sidebarWidth, setSidebarWidth] = useState(250);\n  const [isSidebarVisible, setIsSidebarVisible] = useState(true);\n  const [draggingItem, setDraggingItem] = useState(null);\n  useEffect(() => {\n    fetchFileTree();\n  }, []);\n  const fetchFileTree = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/files');\n      setFileTree(response.data);\n    } catch (error) {\n      console.error('Error fetching file tree:', error);\n    }\n  };\n  const handleMouseDown = e => {\n    e.preventDefault();\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n  const handleMouseMove = e => {\n    setSidebarWidth(e.clientX);\n  };\n  const handleMouseUp = () => {\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n  const toggleSidebar = () => {\n    setIsSidebarVisible(!isSidebarVisible);\n  };\n  const handleFileClick = filePath => {\n    setSelectedFile(filePath);\n    setFileContent(`Content of file: ${filePath}`);\n  };\n  const handleDragStart = item => {\n    setDraggingItem(item);\n  };\n  const handleDrop = async targetFolder => {\n    if (draggingItem) {\n      await axios.post('http://localhost:5000/api/files/move', {\n        srcPath: draggingItem.path,\n        destPath: targetFolder.path\n      });\n      fetchFileTree();\n      setDraggingItem(null);\n    }\n  };\n  const renderFileTree = tree => {\n    return tree.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-tree-item\",\n      draggable: true,\n      onDragStart: () => handleDragStart(item),\n      onDrop: () => item.type === 'folder' && handleDrop(item),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `file-tree-entry ${item.type}`,\n        onClick: () => item.type === 'file' ? handleFileClick(item.path) : null,\n        children: [item.type === 'folder' ? 'üìÅ' : 'üìÑ', \" \", item.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), item.type === 'folder' && item.contents && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-tree-contents\",\n        children: renderFileTree(item.contents)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, item.path, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-browser-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-sidebar\",\n      onClick: toggleSidebar,\n      children: [isSidebarVisible ? 'Hide' : 'Show', \" Sidebar\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), isSidebarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-tree-sidebar\",\n      style: {\n        width: sidebarWidth\n      },\n      onMouseDown: handleMouseDown,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Browser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), renderFileTree(fileTree)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-content\",\n      children: selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Viewing: \", selectedFile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: fileContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a file to view its content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleDriveNotes, \"KOooe7XiHwz6EvQfVKL+rO7n8HI=\");\n_c = GoogleDriveNotes;\nexport default GoogleDriveNotes;\nvar _c;\n$RefreshReg$(_c, \"GoogleDriveNotes\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","GoogleDriveNotes","_s","fileTree","setFileTree","selectedFile","setSelectedFile","fileContent","setFileContent","sidebarWidth","setSidebarWidth","isSidebarVisible","setIsSidebarVisible","draggingItem","setDraggingItem","fetchFileTree","response","get","data","error","console","handleMouseDown","e","preventDefault","document","addEventListener","handleMouseMove","handleMouseUp","clientX","removeEventListener","toggleSidebar","handleFileClick","filePath","handleDragStart","item","handleDrop","targetFolder","post","srcPath","path","destPath","renderFileTree","tree","map","className","draggable","onDragStart","onDrop","type","children","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","contents","style","width","onMouseDown","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/GoogleDriveNotes.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './GoogleDriveNotes.css';\n\nfunction GoogleDriveNotes() {\n  const [fileTree, setFileTree] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [sidebarWidth, setSidebarWidth] = useState(250);\n  const [isSidebarVisible, setIsSidebarVisible] = useState(true);\n  const [draggingItem, setDraggingItem] = useState(null);\n\n  useEffect(() => {\n    fetchFileTree();\n  }, []);\n\n  const fetchFileTree = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/files');\n      setFileTree(response.data);\n    } catch (error) {\n      console.error('Error fetching file tree:', error);\n    }\n  };\n\n  const handleMouseDown = (e) => {\n    e.preventDefault();\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const handleMouseMove = (e) => {\n    setSidebarWidth(e.clientX);\n  };\n\n  const handleMouseUp = () => {\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarVisible(!isSidebarVisible);\n  };\n\n  const handleFileClick = (filePath) => {\n    setSelectedFile(filePath);\n    setFileContent(`Content of file: ${filePath}`);\n  };\n\n  const handleDragStart = (item) => {\n    setDraggingItem(item);\n  };\n\n  const handleDrop = async (targetFolder) => {\n    if (draggingItem) {\n      await axios.post('http://localhost:5000/api/files/move', {\n        srcPath: draggingItem.path,\n        destPath: targetFolder.path\n      });\n      fetchFileTree();\n      setDraggingItem(null);\n    }\n  };\n\n  const renderFileTree = (tree) => {\n    return tree.map((item) => (\n      <div\n        key={item.path}\n        className=\"file-tree-item\"\n        draggable\n        onDragStart={() => handleDragStart(item)}\n        onDrop={() => item.type === 'folder' && handleDrop(item)}\n      >\n        <div\n          className={`file-tree-entry ${item.type}`}\n          onClick={() => item.type === 'file' ? handleFileClick(item.path) : null}\n        >\n          {item.type === 'folder' ? 'üìÅ' : 'üìÑ'} {item.name}\n        </div>\n        {item.type === 'folder' && item.contents && (\n          <div className=\"file-tree-contents\">\n            {renderFileTree(item.contents)}\n          </div>\n        )}\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"file-browser-container\">\n      <button className=\"toggle-sidebar\" onClick={toggleSidebar}>\n        {isSidebarVisible ? 'Hide' : 'Show'} Sidebar\n      </button>\n      {isSidebarVisible && (\n        <div\n          className=\"file-tree-sidebar\"\n          style={{ width: sidebarWidth }}\n          onMouseDown={handleMouseDown}\n        >\n          <h3>File Browser</h3>\n          {renderFileTree(fileTree)}\n        </div>\n      )}\n      <div className=\"file-content\">\n        {selectedFile ? (\n          <div>\n            <h3>Viewing: {selectedFile}</h3>\n            <pre>{fileContent}</pre>\n          </div>\n        ) : (\n          <p>Select a file to view its content</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GoogleDriveNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}