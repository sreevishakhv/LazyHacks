{"ast":null,"code":"import { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\nimport { bucketEndpointMiddleware, bucketEndpointMiddlewareOptions } from \"./bucket-endpoint-middleware\";\nexport function validateBucketNameMiddleware({\n  bucketEndpoint\n}) {\n  return next => async args => {\n    const {\n      input: {\n        Bucket\n      }\n    } = args;\n    if (!bucketEndpoint && typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n      const err = new Error(`Bucket name shouldn't contain '/', received '${Bucket}'`);\n      err.name = \"InvalidBucketName\";\n      throw err;\n    }\n    return next({\n      ...args\n    });\n  };\n}\nexport const validateBucketNameMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"VALIDATE_BUCKET_NAME\"],\n  name: \"validateBucketNameMiddleware\",\n  override: true\n};\nexport const getValidateBucketNamePlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(validateBucketNameMiddleware(options), validateBucketNameMiddlewareOptions);\n    clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["validate","validateArn","bucketEndpointMiddleware","bucketEndpointMiddlewareOptions","validateBucketNameMiddleware","bucketEndpoint","next","args","input","Bucket","indexOf","err","Error","name","validateBucketNameMiddlewareOptions","step","tags","override","getValidateBucketNamePlugin","options","applyToStack","clientStack","add","addRelativeTo"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/validate-bucket-name.js"],"sourcesContent":["import { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\nimport { bucketEndpointMiddleware, bucketEndpointMiddlewareOptions } from \"./bucket-endpoint-middleware\";\nexport function validateBucketNameMiddleware({ bucketEndpoint }) {\n    return (next) => async (args) => {\n        const { input: { Bucket }, } = args;\n        if (!bucketEndpoint && typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n            const err = new Error(`Bucket name shouldn't contain '/', received '${Bucket}'`);\n            err.name = \"InvalidBucketName\";\n            throw err;\n        }\n        return next({ ...args });\n    };\n}\nexport const validateBucketNameMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"VALIDATE_BUCKET_NAME\"],\n    name: \"validateBucketNameMiddleware\",\n    override: true,\n};\nexport const getValidateBucketNamePlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(validateBucketNameMiddleware(options), validateBucketNameMiddlewareOptions);\n        clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,WAAW,QAAQ,0BAA0B;AAClE,SAASC,wBAAwB,EAAEC,+BAA+B,QAAQ,8BAA8B;AACxG,OAAO,SAASC,4BAA4BA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAC7D,OAAQC,IAAI,IAAK,MAAOC,IAAI,IAAK;IAC7B,MAAM;MAAEC,KAAK,EAAE;QAAEC;MAAO;IAAG,CAAC,GAAGF,IAAI;IACnC,IAAI,CAACF,cAAc,IAAI,OAAOI,MAAM,KAAK,QAAQ,IAAI,CAACR,WAAW,CAACQ,MAAM,CAAC,IAAIA,MAAM,CAACC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;MACnG,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,gDAAgDH,MAAM,GAAG,CAAC;MAChFE,GAAG,CAACE,IAAI,GAAG,mBAAmB;MAC9B,MAAMF,GAAG;IACb;IACA,OAAOL,IAAI,CAAC;MAAE,GAAGC;IAAK,CAAC,CAAC;EAC5B,CAAC;AACL;AACA,OAAO,MAAMO,mCAAmC,GAAG;EAC/CC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,CAAC,sBAAsB,CAAC;EAC9BH,IAAI,EAAE,8BAA8B;EACpCI,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,2BAA2B,GAAIC,OAAO,KAAM;EACrDC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAAClB,4BAA4B,CAACe,OAAO,CAAC,EAAEL,mCAAmC,CAAC;IAC3FO,WAAW,CAACE,aAAa,CAACrB,wBAAwB,CAACiB,OAAO,CAAC,EAAEhB,+BAA+B,CAAC;EACjG;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}