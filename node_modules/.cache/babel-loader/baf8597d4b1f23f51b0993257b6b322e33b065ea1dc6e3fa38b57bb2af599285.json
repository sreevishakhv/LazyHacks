{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/UploadNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './UploadNotes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadNotes() {\n  _s();\n  var _folderData$find;\n  // Initial folder structure\n  const [folderData, setFolderData] = useState([{\n    name: \"Math\",\n    files: []\n  }, {\n    name: \"Science\",\n    files: []\n  }]);\n  const [selectedFolder, setSelectedFolder] = useState(\"Math\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [editingFolder, setEditingFolder] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n  const [showMenu, setShowMenu] = useState(null); // Track which folder's menu is open\n\n  // Handle file upload\n  const handleFileUpload = event => {\n    const uploadedFiles = Array.from(event.target.files).map(file => file.name);\n    setFolderData(prevData => prevData.map(folder => folder.name === selectedFolder ? {\n      ...folder,\n      files: [...folder.files, ...uploadedFiles]\n    } : folder));\n  };\n\n  // Add a new folder\n  const handleAddFolder = () => {\n    if (!newFolderName) return;\n    setFolderData([...folderData, {\n      name: newFolderName,\n      files: []\n    }]);\n    setNewFolderName(\"\");\n  };\n\n  // Rename a folder\n  const handleEditFolder = folderName => {\n    setEditingFolder(folderName);\n    setEditName(folderName);\n    setShowMenu(null); // Close menu when renaming\n  };\n  const handleSaveEdit = () => {\n    setFolderData(prevData => prevData.map(folder => folder.name === editingFolder ? {\n      ...folder,\n      name: editName\n    } : folder));\n    setEditingFolder(null);\n  };\n\n  // Delete a folder\n  const handleDeleteFolder = folderName => {\n    var _folderData$;\n    setFolderData(prevData => prevData.filter(folder => folder.name !== folderName));\n    if (selectedFolder === folderName) setSelectedFolder(((_folderData$ = folderData[0]) === null || _folderData$ === void 0 ? void 0 : _folderData$.name) || \"\");\n    setShowMenu(null); // Close menu after deleting\n  };\n\n  // Toggle menu visibility\n  const toggleMenu = folderName => {\n    setShowMenu(showMenu === folderName ? null : folderName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Folders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"folder-list\",\n        children: folderData.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: folder.name === selectedFolder ? \"selected\" : \"\",\n          onClick: () => setSelectedFolder(folder.name),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: folder.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"menu-icon\",\n              onClick: () => toggleMenu(folder.name),\n              children: \"\\u22EE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), showMenu === folder.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-menu\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditFolder(folder.name),\n                children: \"Rename\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFolderData([...folderData, {\n                  name: \"New Folder\",\n                  files: []\n                }]),\n                children: \"Create New Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFolderData(prev => prev.map(f => f.name === folder.name ? {\n                  ...f,\n                  files: [...f.files, \"New File\"]\n                } : f)),\n                children: \"Create New File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteFolder(folder.name),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), editingFolder === folder.name && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editName,\n            onChange: e => setEditName(e.target.value),\n            onBlur: handleSaveEdit,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, folder.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-folder\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          placeholder: \"New Folder Name\",\n          onChange: e => setNewFolderName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddFolder,\n          children: \"Add Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedFolder, \" Notes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileUpload,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_folderData$find = folderData.find(folder => folder.name === selectedFolder)) === null || _folderData$find === void 0 ? void 0 : _folderData$find.files.map((fileName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: fileName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadNotes, \"OoyzBmSYBfojMDKXSfqLC9kOaSw=\");\n_c = UploadNotes;\nexport default UploadNotes;\nvar _c;\n$RefreshReg$(_c, \"UploadNotes\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadNotes","_s","_folderData$find","folderData","setFolderData","name","files","selectedFolder","setSelectedFolder","newFolderName","setNewFolderName","editingFolder","setEditingFolder","editName","setEditName","showMenu","setShowMenu","handleFileUpload","event","uploadedFiles","Array","from","target","map","file","prevData","folder","handleAddFolder","handleEditFolder","folderName","handleSaveEdit","handleDeleteFolder","_folderData$","filter","toggleMenu","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prev","f","type","value","onChange","e","onBlur","autoFocus","placeholder","multiple","find","index","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/UploadNotes.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './UploadNotes.css';\n\nfunction UploadNotes() {\n  // Initial folder structure\n  const [folderData, setFolderData] = useState([\n    { name: \"Math\", files: [] },\n    { name: \"Science\", files: [] },\n  ]);\n\n  const [selectedFolder, setSelectedFolder] = useState(\"Math\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [editingFolder, setEditingFolder] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n  const [showMenu, setShowMenu] = useState(null); // Track which folder's menu is open\n\n  // Handle file upload\n  const handleFileUpload = (event) => {\n    const uploadedFiles = Array.from(event.target.files).map((file) => file.name);\n\n    setFolderData((prevData) =>\n      prevData.map((folder) =>\n        folder.name === selectedFolder\n          ? { ...folder, files: [...folder.files, ...uploadedFiles] }\n          : folder\n      )\n    );\n  };\n\n  // Add a new folder\n  const handleAddFolder = () => {\n    if (!newFolderName) return;\n    setFolderData([...folderData, { name: newFolderName, files: [] }]);\n    setNewFolderName(\"\");\n  };\n\n  // Rename a folder\n  const handleEditFolder = (folderName) => {\n    setEditingFolder(folderName);\n    setEditName(folderName);\n    setShowMenu(null); // Close menu when renaming\n  };\n\n  const handleSaveEdit = () => {\n    setFolderData((prevData) =>\n      prevData.map((folder) =>\n        folder.name === editingFolder ? { ...folder, name: editName } : folder\n      )\n    );\n    setEditingFolder(null);\n  };\n\n  // Delete a folder\n  const handleDeleteFolder = (folderName) => {\n    setFolderData((prevData) => prevData.filter((folder) => folder.name !== folderName));\n    if (selectedFolder === folderName) setSelectedFolder(folderData[0]?.name || \"\");\n    setShowMenu(null); // Close menu after deleting\n  };\n\n  // Toggle menu visibility\n  const toggleMenu = (folderName) => {\n    setShowMenu(showMenu === folderName ? null : folderName);\n  };\n\n  return (\n    <div className=\"upload-notes-page\">\n      <div className=\"sidebar\">\n        <h3>Folders</h3>\n        <ul className=\"folder-list\">\n          {folderData.map((folder) => (\n            <li\n              key={folder.name}\n              className={folder.name === selectedFolder ? \"selected\" : \"\"}\n              onClick={() => setSelectedFolder(folder.name)}\n            >\n              <span>{folder.name}</span>\n              <div className=\"menu-container\">\n                <span className=\"menu-icon\" onClick={() => toggleMenu(folder.name)}>⋮</span>\n                {showMenu === folder.name && (\n                  <div className=\"dropdown-menu\">\n                    <button onClick={() => handleEditFolder(folder.name)}>Rename</button>\n                    <button onClick={() => setFolderData([...folderData, { name: \"New Folder\", files: [] }])}>\n                      Create New Folder\n                    </button>\n                    <button onClick={() => setFolderData((prev) =>\n                      prev.map((f) =>\n                        f.name === folder.name ? { ...f, files: [...f.files, \"New File\"] } : f\n                      )\n                    )}>\n                      Create New File\n                    </button>\n                    <button onClick={() => handleDeleteFolder(folder.name)}>Delete</button>\n                  </div>\n                )}\n              </div>\n              {editingFolder === folder.name && (\n                <input\n                  type=\"text\"\n                  value={editName}\n                  onChange={(e) => setEditName(e.target.value)}\n                  onBlur={handleSaveEdit}\n                  autoFocus\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n        <div className=\"add-folder\">\n          <input\n            type=\"text\"\n            value={newFolderName}\n            placeholder=\"New Folder Name\"\n            onChange={(e) => setNewFolderName(e.target.value)}\n          />\n          <button onClick={handleAddFolder}>Add Folder</button>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <h3>{selectedFolder} Notes</h3>\n        <input type=\"file\" multiple onChange={handleFileUpload} className=\"file-input\" />\n        <div className=\"file-list\">\n          <h4>Files:</h4>\n          <ul>\n            {folderData\n              .find((folder) => folder.name === selectedFolder)\n              ?.files.map((fileName, index) => (\n                <li key={index}>{fileName}</li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}