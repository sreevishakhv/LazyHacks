{"ast":null,"code":"export function ssecMiddleware(options) {\n  return next => async args => {\n    const input = {\n      ...args.input\n    };\n    const properties = [{\n      target: \"SSECustomerKey\",\n      hash: \"SSECustomerKeyMD5\"\n    }, {\n      target: \"CopySourceSSECustomerKey\",\n      hash: \"CopySourceSSECustomerKeyMD5\"\n    }];\n    for (const prop of properties) {\n      const value = input[prop.target];\n      if (value) {\n        let valueForHash;\n        if (typeof value === \"string\") {\n          if (isValidBase64EncodedSSECustomerKey(value, options)) {\n            valueForHash = options.base64Decoder(value);\n          } else {\n            valueForHash = options.utf8Decoder(value);\n            input[prop.target] = options.base64Encoder(valueForHash);\n          }\n        } else {\n          valueForHash = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : new Uint8Array(value);\n          input[prop.target] = options.base64Encoder(valueForHash);\n        }\n        const hash = new options.md5();\n        hash.update(valueForHash);\n        input[prop.hash] = options.base64Encoder(await hash.digest());\n      }\n    }\n    return next({\n      ...args,\n      input\n    });\n  };\n}\nexport const ssecMiddlewareOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"],\n  override: true\n};\nexport const getSsecPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n  }\n});\nexport function isValidBase64EncodedSSECustomerKey(str, options) {\n  const base64Regex = /^(?:[A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\n  if (!base64Regex.test(str)) return false;\n  try {\n    const decodedBytes = options.base64Decoder(str);\n    return decodedBytes.length === 32;\n  } catch {\n    return false;\n  }\n}","map":{"version":3,"names":["ssecMiddleware","options","next","args","input","properties","target","hash","prop","value","valueForHash","isValidBase64EncodedSSECustomerKey","base64Decoder","utf8Decoder","base64Encoder","ArrayBuffer","isView","Uint8Array","buffer","byteOffset","byteLength","md5","update","digest","ssecMiddlewareOptions","name","step","tags","override","getSsecPlugin","config","applyToStack","clientStack","add","str","base64Regex","test","decodedBytes","length"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-ssec/dist-es/index.js"],"sourcesContent":["export function ssecMiddleware(options) {\n    return (next) => async (args) => {\n        const input = { ...args.input };\n        const properties = [\n            {\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\",\n            },\n            {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\",\n            },\n        ];\n        for (const prop of properties) {\n            const value = input[prop.target];\n            if (value) {\n                let valueForHash;\n                if (typeof value === \"string\") {\n                    if (isValidBase64EncodedSSECustomerKey(value, options)) {\n                        valueForHash = options.base64Decoder(value);\n                    }\n                    else {\n                        valueForHash = options.utf8Decoder(value);\n                        input[prop.target] = options.base64Encoder(valueForHash);\n                    }\n                }\n                else {\n                    valueForHash = ArrayBuffer.isView(value)\n                        ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n                        : new Uint8Array(value);\n                    input[prop.target] = options.base64Encoder(valueForHash);\n                }\n                const hash = new options.md5();\n                hash.update(valueForHash);\n                input[prop.hash] = options.base64Encoder(await hash.digest());\n            }\n        }\n        return next({\n            ...args,\n            input,\n        });\n    };\n}\nexport const ssecMiddlewareOptions = {\n    name: \"ssecMiddleware\",\n    step: \"initialize\",\n    tags: [\"SSE\"],\n    override: true,\n};\nexport const getSsecPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    },\n});\nexport function isValidBase64EncodedSSECustomerKey(str, options) {\n    const base64Regex = /^(?:[A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\n    if (!base64Regex.test(str))\n        return false;\n    try {\n        const decodedBytes = options.base64Decoder(str);\n        return decodedBytes.length === 32;\n    }\n    catch {\n        return false;\n    }\n}\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,OAAO,EAAE;EACpC,OAAQC,IAAI,IAAK,MAAOC,IAAI,IAAK;IAC7B,MAAMC,KAAK,GAAG;MAAE,GAAGD,IAAI,CAACC;IAAM,CAAC;IAC/B,MAAMC,UAAU,GAAG,CACf;MACIC,MAAM,EAAE,gBAAgB;MACxBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,MAAM,EAAE,0BAA0B;MAClCC,IAAI,EAAE;IACV,CAAC,CACJ;IACD,KAAK,MAAMC,IAAI,IAAIH,UAAU,EAAE;MAC3B,MAAMI,KAAK,GAAGL,KAAK,CAACI,IAAI,CAACF,MAAM,CAAC;MAChC,IAAIG,KAAK,EAAE;QACP,IAAIC,YAAY;QAChB,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;UAC3B,IAAIE,kCAAkC,CAACF,KAAK,EAAER,OAAO,CAAC,EAAE;YACpDS,YAAY,GAAGT,OAAO,CAACW,aAAa,CAACH,KAAK,CAAC;UAC/C,CAAC,MACI;YACDC,YAAY,GAAGT,OAAO,CAACY,WAAW,CAACJ,KAAK,CAAC;YACzCL,KAAK,CAACI,IAAI,CAACF,MAAM,CAAC,GAAGL,OAAO,CAACa,aAAa,CAACJ,YAAY,CAAC;UAC5D;QACJ,CAAC,MACI;UACDA,YAAY,GAAGK,WAAW,CAACC,MAAM,CAACP,KAAK,CAAC,GAClC,IAAIQ,UAAU,CAACR,KAAK,CAACS,MAAM,EAAET,KAAK,CAACU,UAAU,EAAEV,KAAK,CAACW,UAAU,CAAC,GAChE,IAAIH,UAAU,CAACR,KAAK,CAAC;UAC3BL,KAAK,CAACI,IAAI,CAACF,MAAM,CAAC,GAAGL,OAAO,CAACa,aAAa,CAACJ,YAAY,CAAC;QAC5D;QACA,MAAMH,IAAI,GAAG,IAAIN,OAAO,CAACoB,GAAG,CAAC,CAAC;QAC9Bd,IAAI,CAACe,MAAM,CAACZ,YAAY,CAAC;QACzBN,KAAK,CAACI,IAAI,CAACD,IAAI,CAAC,GAAGN,OAAO,CAACa,aAAa,CAAC,MAAMP,IAAI,CAACgB,MAAM,CAAC,CAAC,CAAC;MACjE;IACJ;IACA,OAAOrB,IAAI,CAAC;MACR,GAAGC,IAAI;MACPC;IACJ,CAAC,CAAC;EACN,CAAC;AACL;AACA,OAAO,MAAMoB,qBAAqB,GAAG;EACjCC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,CAAC,KAAK,CAAC;EACbC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,aAAa,GAAIC,MAAM,KAAM;EACtCC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAACjC,cAAc,CAAC8B,MAAM,CAAC,EAAEN,qBAAqB,CAAC;EAClE;AACJ,CAAC,CAAC;AACF,OAAO,SAASb,kCAAkCA,CAACuB,GAAG,EAAEjC,OAAO,EAAE;EAC7D,MAAMkC,WAAW,GAAG,gEAAgE;EACpF,IAAI,CAACA,WAAW,CAACC,IAAI,CAACF,GAAG,CAAC,EACtB,OAAO,KAAK;EAChB,IAAI;IACA,MAAMG,YAAY,GAAGpC,OAAO,CAACW,aAAa,CAACsB,GAAG,CAAC;IAC/C,OAAOG,YAAY,CAACC,MAAM,KAAK,EAAE;EACrC,CAAC,CACD,MAAM;IACF,OAAO,KAAK;EAChB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}