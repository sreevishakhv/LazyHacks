{"ast":null,"code":"export class S3ExpressIdentityCache {\n  constructor(data = {}) {\n    this.data = data;\n    this.lastPurgeTime = Date.now();\n  }\n  get(key) {\n    const entry = this.data[key];\n    if (!entry) {\n      return;\n    }\n    return entry;\n  }\n  set(key, entry) {\n    this.data[key] = entry;\n    return entry;\n  }\n  delete(key) {\n    delete this.data[key];\n  }\n  async purgeExpired() {\n    const now = Date.now();\n    if (this.lastPurgeTime + S3ExpressIdentityCache.EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS > now) {\n      return;\n    }\n    for (const key in this.data) {\n      const entry = this.data[key];\n      if (!entry.isRefreshing) {\n        const credential = await entry.identity;\n        if (credential.expiration) {\n          if (credential.expiration.getTime() < now) {\n            delete this.data[key];\n          }\n        }\n      }\n    }\n  }\n}\nS3ExpressIdentityCache.EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS = 30000;","map":{"version":3,"names":["S3ExpressIdentityCache","constructor","data","lastPurgeTime","Date","now","get","key","entry","set","delete","purgeExpired","EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS","isRefreshing","credential","identity","expiration","getTime"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/S3ExpressIdentityCache.js"],"sourcesContent":["export class S3ExpressIdentityCache {\n    constructor(data = {}) {\n        this.data = data;\n        this.lastPurgeTime = Date.now();\n    }\n    get(key) {\n        const entry = this.data[key];\n        if (!entry) {\n            return;\n        }\n        return entry;\n    }\n    set(key, entry) {\n        this.data[key] = entry;\n        return entry;\n    }\n    delete(key) {\n        delete this.data[key];\n    }\n    async purgeExpired() {\n        const now = Date.now();\n        if (this.lastPurgeTime + S3ExpressIdentityCache.EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS > now) {\n            return;\n        }\n        for (const key in this.data) {\n            const entry = this.data[key];\n            if (!entry.isRefreshing) {\n                const credential = await entry.identity;\n                if (credential.expiration) {\n                    if (credential.expiration.getTime() < now) {\n                        delete this.data[key];\n                    }\n                }\n            }\n        }\n    }\n}\nS3ExpressIdentityCache.EXPIRED_CREDENTIAL_PURGE_INTERVAL_MS = 30000;\n"],"mappings":"AAAA,OAAO,MAAMA,sBAAsB,CAAC;EAChCC,WAAWA,CAACC,IAAI,GAAG,CAAC,CAAC,EAAE;IACnB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACnC;EACAC,GAAGA,CAACC,GAAG,EAAE;IACL,MAAMC,KAAK,GAAG,IAAI,CAACN,IAAI,CAACK,GAAG,CAAC;IAC5B,IAAI,CAACC,KAAK,EAAE;MACR;IACJ;IACA,OAAOA,KAAK;EAChB;EACAC,GAAGA,CAACF,GAAG,EAAEC,KAAK,EAAE;IACZ,IAAI,CAACN,IAAI,CAACK,GAAG,CAAC,GAAGC,KAAK;IACtB,OAAOA,KAAK;EAChB;EACAE,MAAMA,CAACH,GAAG,EAAE;IACR,OAAO,IAAI,CAACL,IAAI,CAACK,GAAG,CAAC;EACzB;EACA,MAAMI,YAAYA,CAAA,EAAG;IACjB,MAAMN,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,CAACF,aAAa,GAAGH,sBAAsB,CAACY,oCAAoC,GAAGP,GAAG,EAAE;MACxF;IACJ;IACA,KAAK,MAAME,GAAG,IAAI,IAAI,CAACL,IAAI,EAAE;MACzB,MAAMM,KAAK,GAAG,IAAI,CAACN,IAAI,CAACK,GAAG,CAAC;MAC5B,IAAI,CAACC,KAAK,CAACK,YAAY,EAAE;QACrB,MAAMC,UAAU,GAAG,MAAMN,KAAK,CAACO,QAAQ;QACvC,IAAID,UAAU,CAACE,UAAU,EAAE;UACvB,IAAIF,UAAU,CAACE,UAAU,CAACC,OAAO,CAAC,CAAC,GAAGZ,GAAG,EAAE;YACvC,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAAC;UACzB;QACJ;MACJ;IACJ;EACJ;AACJ;AACAP,sBAAsB,CAACY,oCAAoC,GAAG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}