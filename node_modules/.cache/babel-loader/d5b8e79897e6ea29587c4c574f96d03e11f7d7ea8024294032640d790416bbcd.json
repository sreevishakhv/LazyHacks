{"ast":null,"code":"import { S3ExpressIdentityProviderImpl } from \"./s3-express\";\nexport const resolveS3Config = (input, {\n  session\n}) => {\n  const [s3ClientProvider, CreateSessionCommandCtor] = session;\n  return {\n    ...input,\n    forcePathStyle: input.forcePathStyle ?? false,\n    useAccelerateEndpoint: input.useAccelerateEndpoint ?? false,\n    disableMultiregionAccessPoints: input.disableMultiregionAccessPoints ?? false,\n    followRegionRedirects: input.followRegionRedirects ?? false,\n    s3ExpressIdentityProvider: input.s3ExpressIdentityProvider ?? new S3ExpressIdentityProviderImpl(async key => s3ClientProvider().send(new CreateSessionCommandCtor({\n      Bucket: key,\n      SessionMode: \"ReadWrite\"\n    }))),\n    bucketEndpoint: input.bucketEndpoint ?? false\n  };\n};","map":{"version":3,"names":["S3ExpressIdentityProviderImpl","resolveS3Config","input","session","s3ClientProvider","CreateSessionCommandCtor","forcePathStyle","useAccelerateEndpoint","disableMultiregionAccessPoints","followRegionRedirects","s3ExpressIdentityProvider","key","send","Bucket","SessionMode","bucketEndpoint"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3Configuration.js"],"sourcesContent":["import { S3ExpressIdentityProviderImpl } from \"./s3-express\";\nexport const resolveS3Config = (input, { session, }) => {\n    const [s3ClientProvider, CreateSessionCommandCtor] = session;\n    return {\n        ...input,\n        forcePathStyle: input.forcePathStyle ?? false,\n        useAccelerateEndpoint: input.useAccelerateEndpoint ?? false,\n        disableMultiregionAccessPoints: input.disableMultiregionAccessPoints ?? false,\n        followRegionRedirects: input.followRegionRedirects ?? false,\n        s3ExpressIdentityProvider: input.s3ExpressIdentityProvider ??\n            new S3ExpressIdentityProviderImpl(async (key) => s3ClientProvider().send(new CreateSessionCommandCtor({\n                Bucket: key,\n                SessionMode: \"ReadWrite\",\n            }))),\n        bucketEndpoint: input.bucketEndpoint ?? false,\n    };\n};\n"],"mappings":"AAAA,SAASA,6BAA6B,QAAQ,cAAc;AAC5D,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAE;EAAEC;AAAS,CAAC,KAAK;EACpD,MAAM,CAACC,gBAAgB,EAAEC,wBAAwB,CAAC,GAAGF,OAAO;EAC5D,OAAO;IACH,GAAGD,KAAK;IACRI,cAAc,EAAEJ,KAAK,CAACI,cAAc,IAAI,KAAK;IAC7CC,qBAAqB,EAAEL,KAAK,CAACK,qBAAqB,IAAI,KAAK;IAC3DC,8BAA8B,EAAEN,KAAK,CAACM,8BAA8B,IAAI,KAAK;IAC7EC,qBAAqB,EAAEP,KAAK,CAACO,qBAAqB,IAAI,KAAK;IAC3DC,yBAAyB,EAAER,KAAK,CAACQ,yBAAyB,IACtD,IAAIV,6BAA6B,CAAC,MAAOW,GAAG,IAAKP,gBAAgB,CAAC,CAAC,CAACQ,IAAI,CAAC,IAAIP,wBAAwB,CAAC;MAClGQ,MAAM,EAAEF,GAAG;MACXG,WAAW,EAAE;IACjB,CAAC,CAAC,CAAC,CAAC;IACRC,cAAc,EAAEb,KAAK,CAACa,cAAc,IAAI;EAC5C,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}