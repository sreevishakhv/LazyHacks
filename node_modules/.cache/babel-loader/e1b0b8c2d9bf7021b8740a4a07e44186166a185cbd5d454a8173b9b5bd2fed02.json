{"ast":null,"code":"// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n// import './AddTask.css';\n// import Header from '../components/Header';\n\n// function AddTask() {\n//   const [taskName, setTaskName] = useState('');\n//   const [deadline, setDeadline] = useState('');\n//   const [priority, setPriority] = useState('medium');\n//   const [difficulty, setDifficulty] = useState('medium');\n//   const [tasks, setTasks] = useState([]);\n\n//   const handleAddTask = (e) => {\n//     e.preventDefault();\n\n//     // Ensure the deadline is a future date\n//     const selectedDate = new Date(deadline);\n//     const today = new Date();\n//     today.setHours(0, 0, 0, 0); // Set today's time to midnight for accurate comparison\n\n//     if (selectedDate <= today) {\n//       alert(\"Please select a future date for the task deadline.\");\n//       return;\n//     }\n\n//     const newTask = { taskName, deadline: selectedDate, priority, difficulty };\n//     setTasks([...tasks, newTask]);\n\n//     setTaskName('');\n//     setDeadline('');\n//     setPriority('medium');\n//     setDifficulty('medium');\n//   };\n\n//   // Format today's date to YYYY-MM-DD for the min attribute\n//   const todayDate = new Date().toISOString().split(\"T\")[0];\n\n//   return (\n//     <div className=\"add-task-page\">\n//       {/* <Header /> */}\n//       <h2 className=\"page-title\">Add and View Tasks</h2>\n//       <form className=\"task-form-fullwidth\" onSubmit={handleAddTask}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter Task Name\"\n//           value={taskName}\n//           onChange={(e) => setTaskName(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"date\"\n//           value={deadline}\n//           onChange={(e) => setDeadline(e.target.value)}\n//           required\n//           min={todayDate} // Disable past dates\n//         />\n//         <select value={priority} onChange={(e) => setPriority(e.target.value)}>\n//           <option value=\"low\">Low Priority</option>\n//           <option value=\"medium\">Medium Priority</option>\n//           <option value=\"high\">High Priority</option>\n//         </select>\n//         <select value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\n//           <option value=\"easy\">Easy Difficulty</option>\n//           <option value=\"medium\">Medium Difficulty</option>\n//           <option value=\"hard\">Hard Difficulty</option>\n//         </select>\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n\n//       <div className=\"calendar-container\">\n//         <Calendar className=\"calendar\" />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AddTask;","map":{"version":3,"names":[],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/AddTask.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n// import './AddTask.css';\n// import Header from '../components/Header';\n\n\n// function AddTask() {\n//   const [taskName, setTaskName] = useState('');\n//   const [deadline, setDeadline] = useState('');\n//   const [priority, setPriority] = useState('medium');\n//   const [difficulty, setDifficulty] = useState('medium');\n//   const [tasks, setTasks] = useState([]);\n\n//   const handleAddTask = (e) => {\n//     e.preventDefault();\n\n//     // Ensure the deadline is a future date\n//     const selectedDate = new Date(deadline);\n//     const today = new Date();\n//     today.setHours(0, 0, 0, 0); // Set today's time to midnight for accurate comparison\n\n//     if (selectedDate <= today) {\n//       alert(\"Please select a future date for the task deadline.\");\n//       return;\n//     }\n\n//     const newTask = { taskName, deadline: selectedDate, priority, difficulty };\n//     setTasks([...tasks, newTask]);\n\n//     setTaskName('');\n//     setDeadline('');\n//     setPriority('medium');\n//     setDifficulty('medium');\n//   };\n\n//   // Format today's date to YYYY-MM-DD for the min attribute\n//   const todayDate = new Date().toISOString().split(\"T\")[0];\n\n//   return (\n//     <div className=\"add-task-page\">\n//       {/* <Header /> */}\n//       <h2 className=\"page-title\">Add and View Tasks</h2>\n//       <form className=\"task-form-fullwidth\" onSubmit={handleAddTask}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter Task Name\"\n//           value={taskName}\n//           onChange={(e) => setTaskName(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"date\"\n//           value={deadline}\n//           onChange={(e) => setDeadline(e.target.value)}\n//           required\n//           min={todayDate} // Disable past dates\n//         />\n//         <select value={priority} onChange={(e) => setPriority(e.target.value)}>\n//           <option value=\"low\">Low Priority</option>\n//           <option value=\"medium\">Medium Priority</option>\n//           <option value=\"high\">High Priority</option>\n//         </select>\n//         <select value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\n//           <option value=\"easy\">Easy Difficulty</option>\n//           <option value=\"medium\">Medium Difficulty</option>\n//           <option value=\"hard\">Hard Difficulty</option>\n//         </select>\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n\n//       <div className=\"calendar-container\">\n//         <Calendar className=\"calendar\" />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AddTask;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}