{"ast":null,"code":"export const isChecksumWithPartNumber = checksum => {\n  const lastHyphenIndex = checksum.lastIndexOf(\"-\");\n  if (lastHyphenIndex !== -1) {\n    const numberPart = checksum.slice(lastHyphenIndex + 1);\n    if (!numberPart.startsWith(\"0\")) {\n      const number = parseInt(numberPart, 10);\n      if (!isNaN(number) && number >= 1 && number <= 10000) {\n        return true;\n      }\n    }\n  }\n  return false;\n};","map":{"version":3,"names":["isChecksumWithPartNumber","checksum","lastHyphenIndex","lastIndexOf","numberPart","slice","startsWith","number","parseInt","isNaN"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/isChecksumWithPartNumber.js"],"sourcesContent":["export const isChecksumWithPartNumber = (checksum) => {\n    const lastHyphenIndex = checksum.lastIndexOf(\"-\");\n    if (lastHyphenIndex !== -1) {\n        const numberPart = checksum.slice(lastHyphenIndex + 1);\n        if (!numberPart.startsWith(\"0\")) {\n            const number = parseInt(numberPart, 10);\n            if (!isNaN(number) && number >= 1 && number <= 10000) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAIC,QAAQ,IAAK;EAClD,MAAMC,eAAe,GAAGD,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC;EACjD,IAAID,eAAe,KAAK,CAAC,CAAC,EAAE;IACxB,MAAME,UAAU,GAAGH,QAAQ,CAACI,KAAK,CAACH,eAAe,GAAG,CAAC,CAAC;IACtD,IAAI,CAACE,UAAU,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;MAC7B,MAAMC,MAAM,GAAGC,QAAQ,CAACJ,UAAU,EAAE,EAAE,CAAC;MACvC,IAAI,CAACK,KAAK,CAACF,MAAM,CAAC,IAAIA,MAAM,IAAI,CAAC,IAAIA,MAAM,IAAI,KAAK,EAAE;QAClD,OAAO,IAAI;MACf;IACJ;EACJ;EACA,OAAO,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}