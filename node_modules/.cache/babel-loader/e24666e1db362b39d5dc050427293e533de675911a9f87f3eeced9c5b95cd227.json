{"ast":null,"code":"import { regionRedirectEndpointMiddleware, regionRedirectEndpointMiddlewareOptions } from \"./region-redirect-endpoint-middleware\";\nexport function regionRedirectMiddleware(clientConfig) {\n  return (next, context) => async args => {\n    try {\n      return await next(args);\n    } catch (err) {\n      if (clientConfig.followRegionRedirects) {\n        if (err?.$metadata?.httpStatusCode === 301 || err?.$metadata?.httpStatusCode === 400 && err?.name === \"IllegalLocationConstraintException\") {\n          try {\n            const actualRegion = err.$response.headers[\"x-amz-bucket-region\"];\n            context.logger?.debug(`Redirecting from ${await clientConfig.region()} to ${actualRegion}`);\n            context.__s3RegionRedirect = actualRegion;\n          } catch (e) {\n            throw new Error(\"Region redirect failed: \" + e);\n          }\n          return next(args);\n        }\n      }\n      throw err;\n    }\n  };\n}\nexport const regionRedirectMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"REGION_REDIRECT\", \"S3\"],\n  name: \"regionRedirectMiddleware\",\n  override: true\n};\nexport const getRegionRedirectMiddlewarePlugin = clientConfig => ({\n  applyToStack: clientStack => {\n    clientStack.add(regionRedirectMiddleware(clientConfig), regionRedirectMiddlewareOptions);\n    clientStack.addRelativeTo(regionRedirectEndpointMiddleware(clientConfig), regionRedirectEndpointMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["regionRedirectEndpointMiddleware","regionRedirectEndpointMiddlewareOptions","regionRedirectMiddleware","clientConfig","next","context","args","err","followRegionRedirects","$metadata","httpStatusCode","name","actualRegion","$response","headers","logger","debug","region","__s3RegionRedirect","e","Error","regionRedirectMiddlewareOptions","step","tags","override","getRegionRedirectMiddlewarePlugin","applyToStack","clientStack","add","addRelativeTo"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-middleware.js"],"sourcesContent":["import { regionRedirectEndpointMiddleware, regionRedirectEndpointMiddlewareOptions, } from \"./region-redirect-endpoint-middleware\";\nexport function regionRedirectMiddleware(clientConfig) {\n    return (next, context) => async (args) => {\n        try {\n            return await next(args);\n        }\n        catch (err) {\n            if (clientConfig.followRegionRedirects) {\n                if (err?.$metadata?.httpStatusCode === 301 ||\n                    (err?.$metadata?.httpStatusCode === 400 && err?.name === \"IllegalLocationConstraintException\")) {\n                    try {\n                        const actualRegion = err.$response.headers[\"x-amz-bucket-region\"];\n                        context.logger?.debug(`Redirecting from ${await clientConfig.region()} to ${actualRegion}`);\n                        context.__s3RegionRedirect = actualRegion;\n                    }\n                    catch (e) {\n                        throw new Error(\"Region redirect failed: \" + e);\n                    }\n                    return next(args);\n                }\n            }\n            throw err;\n        }\n    };\n}\nexport const regionRedirectMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"REGION_REDIRECT\", \"S3\"],\n    name: \"regionRedirectMiddleware\",\n    override: true,\n};\nexport const getRegionRedirectMiddlewarePlugin = (clientConfig) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(regionRedirectMiddleware(clientConfig), regionRedirectMiddlewareOptions);\n        clientStack.addRelativeTo(regionRedirectEndpointMiddleware(clientConfig), regionRedirectEndpointMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,SAASA,gCAAgC,EAAEC,uCAAuC,QAAS,uCAAuC;AAClI,OAAO,SAASC,wBAAwBA,CAACC,YAAY,EAAE;EACnD,OAAO,CAACC,IAAI,EAAEC,OAAO,KAAK,MAAOC,IAAI,IAAK;IACtC,IAAI;MACA,OAAO,MAAMF,IAAI,CAACE,IAAI,CAAC;IAC3B,CAAC,CACD,OAAOC,GAAG,EAAE;MACR,IAAIJ,YAAY,CAACK,qBAAqB,EAAE;QACpC,IAAID,GAAG,EAAEE,SAAS,EAAEC,cAAc,KAAK,GAAG,IACrCH,GAAG,EAAEE,SAAS,EAAEC,cAAc,KAAK,GAAG,IAAIH,GAAG,EAAEI,IAAI,KAAK,oCAAqC,EAAE;UAChG,IAAI;YACA,MAAMC,YAAY,GAAGL,GAAG,CAACM,SAAS,CAACC,OAAO,CAAC,qBAAqB,CAAC;YACjET,OAAO,CAACU,MAAM,EAAEC,KAAK,CAAC,oBAAoB,MAAMb,YAAY,CAACc,MAAM,CAAC,CAAC,OAAOL,YAAY,EAAE,CAAC;YAC3FP,OAAO,CAACa,kBAAkB,GAAGN,YAAY;UAC7C,CAAC,CACD,OAAOO,CAAC,EAAE;YACN,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,CAAC,CAAC;UACnD;UACA,OAAOf,IAAI,CAACE,IAAI,CAAC;QACrB;MACJ;MACA,MAAMC,GAAG;IACb;EACJ,CAAC;AACL;AACA,OAAO,MAAMc,+BAA+B,GAAG;EAC3CC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC;EAC/BZ,IAAI,EAAE,0BAA0B;EAChCa,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,iCAAiC,GAAItB,YAAY,KAAM;EAChEuB,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAAC1B,wBAAwB,CAACC,YAAY,CAAC,EAAEkB,+BAA+B,CAAC;IACxFM,WAAW,CAACE,aAAa,CAAC7B,gCAAgC,CAACG,YAAY,CAAC,EAAEF,uCAAuC,CAAC;EACtH;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}