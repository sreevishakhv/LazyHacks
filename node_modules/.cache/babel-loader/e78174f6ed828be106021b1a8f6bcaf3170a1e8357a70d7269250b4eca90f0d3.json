{"ast":null,"code":"var _jsxFileName = \"/home/sv/LazyHacks/study-tracker-ui/src/pages/GoogleDriveNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport './GoogleDriveNotes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GoogleDriveNotes() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/files');\n      setFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const uploadFile = async () => {\n    if (!file) {\n      alert('Please select a file to upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('File uploaded successfully.');\n      setFile(null);\n      fetchFiles(); // Refresh the list of files\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('Failed to upload file.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-browser-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-browser\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Browser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        className: \"upload-button\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Files in Server Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), files.length > 0 ? files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:5000/files/${file}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No files available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleDriveNotes, \"xLjH6g2OroLR9TAdd0QnK8xl8HM=\");\n_c = GoogleDriveNotes;\nexport default GoogleDriveNotes;\nvar _c;\n$RefreshReg$(_c, \"GoogleDriveNotes\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","jsxDEV","_jsxDEV","GoogleDriveNotes","_s","files","setFiles","file","setFile","fetchFiles","response","get","data","error","console","handleFileChange","event","target","uploadFile","alert","formData","FormData","append","post","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","length","map","index","href","rel","_c","$RefreshReg$"],"sources":["/home/sv/LazyHacks/study-tracker-ui/src/pages/GoogleDriveNotes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport './GoogleDriveNotes.css';\n\nfunction GoogleDriveNotes() {\n  const [files, setFiles] = useState([]);\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/files');\n      setFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const uploadFile = async () => {\n    if (!file) {\n      alert('Please select a file to upload.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      alert('File uploaded successfully.');\n      setFile(null);\n      fetchFiles(); // Refresh the list of files\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('Failed to upload file.');\n    }\n  };\n\n  return (\n    <div className=\"file-browser-page\">\n      <Header />\n      <div className=\"file-browser\">\n        <h3>File Browser</h3>\n        <input type=\"file\" onChange={handleFileChange} className=\"file-input\" />\n        <button onClick={uploadFile} className=\"upload-button\">Upload File</button>\n        <div className=\"file-list\">\n          <h4>Files in Server Folder</h4>\n          {files.length > 0 ? (\n            files.map((file, index) => (\n              <div key={index} className=\"file-item\">\n                <a href={`http://localhost:5000/files/${file}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {file}\n                </a>\n              </div>\n            ))\n          ) : (\n            <p>No files available.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GoogleDriveNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}