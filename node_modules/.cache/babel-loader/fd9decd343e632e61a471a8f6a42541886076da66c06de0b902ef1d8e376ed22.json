{"ast":null,"code":"import { getAddExpectContinuePlugin } from \"@aws-sdk/middleware-expect-continue\";\nimport { resolveFlexibleChecksumsConfig } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRegionRedirectMiddlewarePlugin, getS3ExpressHttpSigningPlugin, getS3ExpressPlugin, getValidateBucketNamePlugin, resolveS3Config } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin } from \"@smithy/core\";\nimport { resolveEventStreamSerdeConfig } from \"@smithy/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client } from \"@smithy/smithy-client\";\nimport { defaultS3HttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig } from \"./auth/httpAuthSchemeProvider\";\nimport { CreateSessionCommand } from \"./commands/CreateSessionCommand\";\nimport { resolveClientEndpointParameters } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class S3Client extends __Client {\n  constructor(...[configuration]) {\n    const _config_0 = __getRuntimeConfig(configuration || {});\n    const _config_1 = resolveClientEndpointParameters(_config_0);\n    const _config_2 = resolveUserAgentConfig(_config_1);\n    const _config_3 = resolveFlexibleChecksumsConfig(_config_2);\n    const _config_4 = resolveRetryConfig(_config_3);\n    const _config_5 = resolveRegionConfig(_config_4);\n    const _config_6 = resolveHostHeaderConfig(_config_5);\n    const _config_7 = resolveEndpointConfig(_config_6);\n    const _config_8 = resolveEventStreamSerdeConfig(_config_7);\n    const _config_9 = resolveHttpAuthSchemeConfig(_config_8);\n    const _config_10 = resolveS3Config(_config_9, {\n      session: [() => this, CreateSessionCommand]\n    });\n    const _config_11 = resolveRuntimeExtensions(_config_10, configuration?.extensions || []);\n    super(_config_11);\n    this.config = _config_11;\n    this.middlewareStack.use(getUserAgentPlugin(this.config));\n    this.middlewareStack.use(getRetryPlugin(this.config));\n    this.middlewareStack.use(getContentLengthPlugin(this.config));\n    this.middlewareStack.use(getHostHeaderPlugin(this.config));\n    this.middlewareStack.use(getLoggerPlugin(this.config));\n    this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n    this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n      httpAuthSchemeParametersProvider: defaultS3HttpAuthSchemeParametersProvider,\n      identityProviderConfigProvider: async config => new DefaultIdentityProviderConfig({\n        \"aws.auth#sigv4\": config.credentials,\n        \"aws.auth#sigv4a\": config.credentials\n      })\n    }));\n    this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    this.middlewareStack.use(getValidateBucketNamePlugin(this.config));\n    this.middlewareStack.use(getAddExpectContinuePlugin(this.config));\n    this.middlewareStack.use(getRegionRedirectMiddlewarePlugin(this.config));\n    this.middlewareStack.use(getS3ExpressPlugin(this.config));\n    this.middlewareStack.use(getS3ExpressHttpSigningPlugin(this.config));\n  }\n  destroy() {\n    super.destroy();\n  }\n}","map":{"version":3,"names":["getAddExpectContinuePlugin","resolveFlexibleChecksumsConfig","getHostHeaderPlugin","resolveHostHeaderConfig","getLoggerPlugin","getRecursionDetectionPlugin","getRegionRedirectMiddlewarePlugin","getS3ExpressHttpSigningPlugin","getS3ExpressPlugin","getValidateBucketNamePlugin","resolveS3Config","getUserAgentPlugin","resolveUserAgentConfig","resolveRegionConfig","DefaultIdentityProviderConfig","getHttpAuthSchemeEndpointRuleSetPlugin","getHttpSigningPlugin","resolveEventStreamSerdeConfig","getContentLengthPlugin","resolveEndpointConfig","getRetryPlugin","resolveRetryConfig","Client","__Client","defaultS3HttpAuthSchemeParametersProvider","resolveHttpAuthSchemeConfig","CreateSessionCommand","resolveClientEndpointParameters","getRuntimeConfig","__getRuntimeConfig","resolveRuntimeExtensions","S3Client","constructor","configuration","_config_0","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","_config_7","_config_8","_config_9","_config_10","session","_config_11","extensions","config","middlewareStack","use","httpAuthSchemeParametersProvider","identityProviderConfigProvider","credentials","destroy"],"sources":["/home/sv/LazyHacks/study-tracker-ui/node_modules/@aws-sdk/client-s3/dist-es/S3Client.js"],"sourcesContent":["import { getAddExpectContinuePlugin } from \"@aws-sdk/middleware-expect-continue\";\nimport { resolveFlexibleChecksumsConfig, } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRegionRedirectMiddlewarePlugin, getS3ExpressHttpSigningPlugin, getS3ExpressPlugin, getValidateBucketNamePlugin, resolveS3Config, } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { resolveEventStreamSerdeConfig, } from \"@smithy/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultS3HttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { CreateSessionCommand, } from \"./commands/CreateSessionCommand\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class S3Client extends __Client {\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveFlexibleChecksumsConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveRegionConfig(_config_4);\n        const _config_6 = resolveHostHeaderConfig(_config_5);\n        const _config_7 = resolveEndpointConfig(_config_6);\n        const _config_8 = resolveEventStreamSerdeConfig(_config_7);\n        const _config_9 = resolveHttpAuthSchemeConfig(_config_8);\n        const _config_10 = resolveS3Config(_config_9, { session: [() => this, CreateSessionCommand] });\n        const _config_11 = resolveRuntimeExtensions(_config_10, configuration?.extensions || []);\n        super(_config_11);\n        this.config = _config_11;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultS3HttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n                \"aws.auth#sigv4a\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n        this.middlewareStack.use(getValidateBucketNamePlugin(this.config));\n        this.middlewareStack.use(getAddExpectContinuePlugin(this.config));\n        this.middlewareStack.use(getRegionRedirectMiddlewarePlugin(this.config));\n        this.middlewareStack.use(getS3ExpressPlugin(this.config));\n        this.middlewareStack.use(getS3ExpressHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}